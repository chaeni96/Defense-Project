using System;
using System.Collections.Generic;
using BansheeGz.BGDatabase;
using Alias_rifegrt_unitBuildData = D_unitBuildData;
using Alias_rifegrt_statDatas = D_statDatas;
using Alias_rifegrt_StageData = D_StageData;

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

#pragma warning disable 414

public partial class D_TileShpeData : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_TileShpeData(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_TileShpeData(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "TileShpeData";
		public const string name = "name";
		public const string unitBuildData = "unitBuildData";
		public const string grade = "grade";
		public const string TileShpae = "TileShpae";
		public const string ShopGrade = "ShopGrade";
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5526519764914468050UL,4239600642928235181UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public List<D_unitBuildData> f_unitBuildData => BGCodeGenUtils.GetNested<D_unitBuildData>(_f_unitBuildData, Index);
	public BGDatabaseEnum.UnitGrade f_grade
	{
		get => (BGDatabaseEnum.UnitGrade) _f_grade.GetStoredValue(Index);
		set => _f_grade.SetStoredValue(Index, (System.Int32) value);
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(4612699089538755472UL, 15389567449175696803UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldNested _ufle12jhs77_f_unitBuildData;
	public static BansheeGz.BGDatabase.BGFieldNested _f_unitBuildData => _ufle12jhs77_f_unitBuildData ?? (_ufle12jhs77_f_unitBuildData = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldNested>(MetaDefault, new BGId(5267104093635224925UL, 11893930471853365640UL), () => _ufle12jhs77_f_unitBuildData = null));
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_f_grade;
	public static BansheeGz.BGDatabase.BGFieldEnum _f_grade => _ufle12jhs77_f_grade ?? (_ufle12jhs77_f_grade = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEnum>(MetaDefault, new BGId(5085254489454765700UL, 2735600988159512248UL), () => _ufle12jhs77_f_grade = null));
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_TileShpae;
	public static BansheeGz.BGDatabase.BGKey _TileShpae => _edeht3sdad33_TileShpae ?? (_edeht3sdad33_TileShpae = BGCodeGenUtils.GetKey(MetaDefault, new BGId(4974985753661443278UL, 14549488637077833392UL), () => _edeht3sdad33_TileShpae = null));
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_ShopGrade;
	public static BansheeGz.BGDatabase.BGKey _ShopGrade => _edeht3sdad33_ShopGrade ?? (_edeht3sdad33_ShopGrade = BGCodeGenUtils.GetKey(MetaDefault, new BGId(5679847359208220457UL, 15582120046338116030UL), () => _edeht3sdad33_ShopGrade = null));
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_UnitStat.Factory _factory4_PFS = new D_UnitStat.Factory();
	private static readonly D_statDatas.Factory _factory5_PFS = new D_statDatas.Factory();
	private static readonly D_unitBuildData.Factory _factory6_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory7_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory8_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory9_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory10_PFS = new D_StageData.Factory();
	private D_TileShpeData() : base(MetaDefault) {}
	private D_TileShpeData(BGId id) : base(MetaDefault, id) {}
	private D_TileShpeData(BGMetaEntity meta) : base(meta) {}
	private D_TileShpeData(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_TileShpeData FindEntity(Predicate<D_TileShpeData> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_TileShpeData> FindEntities(Predicate<D_TileShpeData> filter, List<D_TileShpeData> result=null, Comparison<D_TileShpeData> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_TileShpeData> action, Predicate<D_TileShpeData> filter=null, Comparison<D_TileShpeData> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_TileShpeData GetEntity(BGId entityId) => (D_TileShpeData) MetaDefault.GetEntity(entityId);
	public static D_TileShpeData GetEntity(int index) => (D_TileShpeData) MetaDefault[index];
	public static D_TileShpeData GetEntity(string entityName) => (D_TileShpeData) MetaDefault.GetEntity(entityName);
	public static D_TileShpeData NewEntity() => (D_TileShpeData) MetaDefault.NewEntity();
	public static D_TileShpeData NewEntity(BGId entityId) => (D_TileShpeData) MetaDefault.NewEntity(entityId);
	public static D_TileShpeData NewEntity(Action<D_TileShpeData> callback) => (D_TileShpeData) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_TileShpeData)entity)));
	public static D_TileShpeData GetEntityByKeyTileShpae(System.String name) => (D_TileShpeData) _TileShpae.GetEntityByKey<System.String>(name);
	public static D_TileShpeData GetEntityByKeyShopGrade(BGDatabaseEnum.UnitGrade grade) => (D_TileShpeData) _ShopGrade.GetEntityByKey<BGDatabaseEnum.UnitGrade>(grade);
}

public partial class D_LocalUserData : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_LocalUserData(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_LocalUserData(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "LocalUserData";
		public const string name = "name";
		public const string Gold = "Gold";
		public const string BoostDeck = "BoostDeck";
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4625932937206405802UL,11707112876743021752UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public System.Int32 f_Gold
	{
		get => _f_Gold[Index];
		set => _f_Gold[Index] = value;
	}
	public List<D_BoostDeck> f_BoostDeck => BGCodeGenUtils.GetNested<D_BoostDeck>(_f_BoostDeck, Index);
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5570864947923372496UL, 16114093359231942036UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_Gold;
	public static BansheeGz.BGDatabase.BGFieldInt _f_Gold => _ufle12jhs77_f_Gold ?? (_ufle12jhs77_f_Gold = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(4683257009118535675UL, 10952020009379038888UL), () => _ufle12jhs77_f_Gold = null));
	private static BansheeGz.BGDatabase.BGFieldNested _ufle12jhs77_f_BoostDeck;
	public static BansheeGz.BGDatabase.BGFieldNested _f_BoostDeck => _ufle12jhs77_f_BoostDeck ?? (_ufle12jhs77_f_BoostDeck = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldNested>(MetaDefault, new BGId(5417050161172596524UL, 5519351679311806344UL), () => _ufle12jhs77_f_BoostDeck = null));
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_UnitStat.Factory _factory4_PFS = new D_UnitStat.Factory();
	private static readonly D_statDatas.Factory _factory5_PFS = new D_statDatas.Factory();
	private static readonly D_unitBuildData.Factory _factory6_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory7_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory8_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory9_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory10_PFS = new D_StageData.Factory();
	private D_LocalUserData() : base(MetaDefault) {}
	private D_LocalUserData(BGId id) : base(MetaDefault, id) {}
	private D_LocalUserData(BGMetaEntity meta) : base(meta) {}
	private D_LocalUserData(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_LocalUserData FindEntity(Predicate<D_LocalUserData> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_LocalUserData> FindEntities(Predicate<D_LocalUserData> filter, List<D_LocalUserData> result=null, Comparison<D_LocalUserData> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_LocalUserData> action, Predicate<D_LocalUserData> filter=null, Comparison<D_LocalUserData> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_LocalUserData GetEntity(BGId entityId) => (D_LocalUserData) MetaDefault.GetEntity(entityId);
	public static D_LocalUserData GetEntity(int index) => (D_LocalUserData) MetaDefault[index];
	public static D_LocalUserData GetEntity(string entityName) => (D_LocalUserData) MetaDefault.GetEntity(entityName);
	public static D_LocalUserData NewEntity() => (D_LocalUserData) MetaDefault.NewEntity();
	public static D_LocalUserData NewEntity(BGId entityId) => (D_LocalUserData) MetaDefault.NewEntity(entityId);
	public static D_LocalUserData NewEntity(Action<D_LocalUserData> callback) => (D_LocalUserData) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_LocalUserData)entity)));
}

public partial class D_BoostDeck : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_BoostDeck(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_BoostDeck(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "BoostDeck";
		public const string name = "name";
		public const string LocalUserData = "LocalUserData";
	}
	private static BansheeGz.BGDatabase.BGMetaNested _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaNested MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaNested>(new BGId(5516462181609044315UL,3959596604375669897UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public D_LocalUserData f_LocalUserData
	{
		get => (D_LocalUserData) _f_LocalUserData[Index];
		set => _f_LocalUserData[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5197673912409473507UL, 13854933137346017459UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_LocalUserData;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_LocalUserData => _ufle12jhs77_f_LocalUserData ?? (_ufle12jhs77_f_LocalUserData = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationSingle>(MetaDefault, new BGId(5157762030127206670UL, 18423548300425324437UL), () => _ufle12jhs77_f_LocalUserData = null));
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_UnitStat.Factory _factory4_PFS = new D_UnitStat.Factory();
	private static readonly D_statDatas.Factory _factory5_PFS = new D_statDatas.Factory();
	private static readonly D_unitBuildData.Factory _factory6_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory7_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory8_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory9_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory10_PFS = new D_StageData.Factory();
	private D_BoostDeck() : base(MetaDefault) {}
	private D_BoostDeck(BGId id) : base(MetaDefault, id) {}
	private D_BoostDeck(BGMetaEntity meta) : base(meta) {}
	private D_BoostDeck(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_BoostDeck FindEntity(Predicate<D_BoostDeck> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_BoostDeck> FindEntities(Predicate<D_BoostDeck> filter, List<D_BoostDeck> result=null, Comparison<D_BoostDeck> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_BoostDeck> action, Predicate<D_BoostDeck> filter=null, Comparison<D_BoostDeck> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_BoostDeck GetEntity(BGId entityId) => (D_BoostDeck) MetaDefault.GetEntity(entityId);
	public static D_BoostDeck GetEntity(int index) => (D_BoostDeck) MetaDefault[index];
	public static D_BoostDeck GetEntity(string entityName) => (D_BoostDeck) MetaDefault.GetEntity(entityName);
	public static D_BoostDeck NewEntity() => (D_BoostDeck) MetaDefault.NewEntity();
	public static D_BoostDeck NewEntity(BGId entityId) => (D_BoostDeck) MetaDefault.NewEntity(entityId);
	public static D_BoostDeck NewEntity(Action<D_BoostDeck> callback) => (D_BoostDeck) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_BoostDeck)entity)));
	public static D_BoostDeck NewEntity(D_LocalUserData owner) => (D_BoostDeck) MetaDefault.NewEntity(owner);
	public static D_BoostDeck NewEntity(D_LocalUserData owner, BGId entityId) => (D_BoostDeck) MetaDefault.NewEntity(owner, entityId);
	public static D_BoostDeck NewEntity(D_LocalUserData owner, Action<D_BoostDeck> callback) => (D_BoostDeck) MetaDefault.NewEntity(owner, new BGMetaEntity.NewEntityContext(entity => callback((D_BoostDeck)entity)));
}

public partial class D_UnitData : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_UnitData(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_UnitData(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "UnitData";
		public const string name = "name";
		public const string statDatas = "statDatas";
		public const string SkillAttackType = "SkillAttackType";
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5098187849243670608UL,7590059858118427043UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public List<D_statDatas> f_statDatas => BGCodeGenUtils.GetNested<D_statDatas>(_f_statDatas, Index);
	public BGDatabaseEnum.SkillAttackType f_SkillAttackType
	{
		get => (BGDatabaseEnum.SkillAttackType) _f_SkillAttackType.GetStoredValue(Index);
		set => _f_SkillAttackType.SetStoredValue(Index, (System.Int32) value);
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(4978381386621882592UL, 9377071611302703509UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldNested _ufle12jhs77_f_statDatas;
	public static BansheeGz.BGDatabase.BGFieldNested _f_statDatas => _ufle12jhs77_f_statDatas ?? (_ufle12jhs77_f_statDatas = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldNested>(MetaDefault, new BGId(5475734705730849580UL, 3233909037450398366UL), () => _ufle12jhs77_f_statDatas = null));
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_f_SkillAttackType;
	public static BansheeGz.BGDatabase.BGFieldEnum _f_SkillAttackType => _ufle12jhs77_f_SkillAttackType ?? (_ufle12jhs77_f_SkillAttackType = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEnum>(MetaDefault, new BGId(5274816935596477599UL, 15588288739445877685UL), () => _ufle12jhs77_f_SkillAttackType = null));
	public List<Alias_rifegrt_unitBuildData> RelatedunitBuildDataListUsingunitDataRelation => BGCodeGenUtils.GetRelatedInbound<Alias_rifegrt_unitBuildData>(Alias_rifegrt_unitBuildData._f_unitData, Id);
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_UnitStat.Factory _factory4_PFS = new D_UnitStat.Factory();
	private static readonly D_statDatas.Factory _factory5_PFS = new D_statDatas.Factory();
	private static readonly D_unitBuildData.Factory _factory6_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory7_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory8_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory9_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory10_PFS = new D_StageData.Factory();
	private D_UnitData() : base(MetaDefault) {}
	private D_UnitData(BGId id) : base(MetaDefault, id) {}
	private D_UnitData(BGMetaEntity meta) : base(meta) {}
	private D_UnitData(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_UnitData FindEntity(Predicate<D_UnitData> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_UnitData> FindEntities(Predicate<D_UnitData> filter, List<D_UnitData> result=null, Comparison<D_UnitData> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_UnitData> action, Predicate<D_UnitData> filter=null, Comparison<D_UnitData> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_UnitData GetEntity(BGId entityId) => (D_UnitData) MetaDefault.GetEntity(entityId);
	public static D_UnitData GetEntity(int index) => (D_UnitData) MetaDefault[index];
	public static D_UnitData GetEntity(string entityName) => (D_UnitData) MetaDefault.GetEntity(entityName);
	public static D_UnitData NewEntity() => (D_UnitData) MetaDefault.NewEntity();
	public static D_UnitData NewEntity(BGId entityId) => (D_UnitData) MetaDefault.NewEntity(entityId);
	public static D_UnitData NewEntity(Action<D_UnitData> callback) => (D_UnitData) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_UnitData)entity)));
}

public partial class D_UnitStat : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_UnitStat(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_UnitStat(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "UnitStat";
		public const string name = "name";
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5186153289177203967UL,17808808904195242630UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5161906705463305257UL, 6833134698217662355UL), () => _ufle12jhs77_f_name = null));
	public List<Alias_rifegrt_statDatas> RelatedstatDatasListUsingstatRelation => BGCodeGenUtils.GetRelatedInbound<Alias_rifegrt_statDatas>(Alias_rifegrt_statDatas._f_stat, Id);
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_UnitStat.Factory _factory4_PFS = new D_UnitStat.Factory();
	private static readonly D_statDatas.Factory _factory5_PFS = new D_statDatas.Factory();
	private static readonly D_unitBuildData.Factory _factory6_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory7_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory8_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory9_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory10_PFS = new D_StageData.Factory();
	private D_UnitStat() : base(MetaDefault) {}
	private D_UnitStat(BGId id) : base(MetaDefault, id) {}
	private D_UnitStat(BGMetaEntity meta) : base(meta) {}
	private D_UnitStat(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_UnitStat FindEntity(Predicate<D_UnitStat> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_UnitStat> FindEntities(Predicate<D_UnitStat> filter, List<D_UnitStat> result=null, Comparison<D_UnitStat> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_UnitStat> action, Predicate<D_UnitStat> filter=null, Comparison<D_UnitStat> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_UnitStat GetEntity(BGId entityId) => (D_UnitStat) MetaDefault.GetEntity(entityId);
	public static D_UnitStat GetEntity(int index) => (D_UnitStat) MetaDefault[index];
	public static D_UnitStat GetEntity(string entityName) => (D_UnitStat) MetaDefault.GetEntity(entityName);
	public static D_UnitStat NewEntity() => (D_UnitStat) MetaDefault.NewEntity();
	public static D_UnitStat NewEntity(BGId entityId) => (D_UnitStat) MetaDefault.NewEntity(entityId);
	public static D_UnitStat NewEntity(Action<D_UnitStat> callback) => (D_UnitStat) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_UnitStat)entity)));
}

public partial class D_statDatas : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_statDatas(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_statDatas(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "statDatas";
		public const string name = "name";
		public const string UnitData = "UnitData";
		public const string stat = "stat";
		public const string value = "value";
	}
	private static BansheeGz.BGDatabase.BGMetaNested _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaNested MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaNested>(new BGId(4677001862833252198UL,17227539508812832132UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public D_UnitData f_UnitData
	{
		get => (D_UnitData) _f_UnitData[Index];
		set => _f_UnitData[Index] = value;
	}
	public D_UnitStat f_stat
	{
		get => (D_UnitStat) _f_stat[Index];
		set => _f_stat[Index] = value;
	}
	public System.Int32 f_value
	{
		get => _f_value[Index];
		set => _f_value[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5240328156132197605UL, 8112268647951590819UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_UnitData;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_UnitData => _ufle12jhs77_f_UnitData ?? (_ufle12jhs77_f_UnitData = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationSingle>(MetaDefault, new BGId(5313188107870138402UL, 5719261033964088505UL), () => _ufle12jhs77_f_UnitData = null));
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_stat;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_stat => _ufle12jhs77_f_stat ?? (_ufle12jhs77_f_stat = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationSingle>(MetaDefault, new BGId(5256411640760305846UL, 3061902281380513942UL), () => _ufle12jhs77_f_stat = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_value;
	public static BansheeGz.BGDatabase.BGFieldInt _f_value => _ufle12jhs77_f_value ?? (_ufle12jhs77_f_value = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5427435841711547707UL, 17735938886241975448UL), () => _ufle12jhs77_f_value = null));
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_UnitStat.Factory _factory4_PFS = new D_UnitStat.Factory();
	private static readonly D_statDatas.Factory _factory5_PFS = new D_statDatas.Factory();
	private static readonly D_unitBuildData.Factory _factory6_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory7_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory8_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory9_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory10_PFS = new D_StageData.Factory();
	private D_statDatas() : base(MetaDefault) {}
	private D_statDatas(BGId id) : base(MetaDefault, id) {}
	private D_statDatas(BGMetaEntity meta) : base(meta) {}
	private D_statDatas(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_statDatas FindEntity(Predicate<D_statDatas> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_statDatas> FindEntities(Predicate<D_statDatas> filter, List<D_statDatas> result=null, Comparison<D_statDatas> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_statDatas> action, Predicate<D_statDatas> filter=null, Comparison<D_statDatas> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_statDatas GetEntity(BGId entityId) => (D_statDatas) MetaDefault.GetEntity(entityId);
	public static D_statDatas GetEntity(int index) => (D_statDatas) MetaDefault[index];
	public static D_statDatas GetEntity(string entityName) => (D_statDatas) MetaDefault.GetEntity(entityName);
	public static D_statDatas NewEntity() => (D_statDatas) MetaDefault.NewEntity();
	public static D_statDatas NewEntity(BGId entityId) => (D_statDatas) MetaDefault.NewEntity(entityId);
	public static D_statDatas NewEntity(Action<D_statDatas> callback) => (D_statDatas) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_statDatas)entity)));
	public static D_statDatas NewEntity(D_UnitData owner) => (D_statDatas) MetaDefault.NewEntity(owner);
	public static D_statDatas NewEntity(D_UnitData owner, BGId entityId) => (D_statDatas) MetaDefault.NewEntity(owner, entityId);
	public static D_statDatas NewEntity(D_UnitData owner, Action<D_statDatas> callback) => (D_statDatas) MetaDefault.NewEntity(owner, new BGMetaEntity.NewEntityContext(entity => callback((D_statDatas)entity)));
}

public partial class D_unitBuildData : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_unitBuildData(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_unitBuildData(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "unitBuildData";
		public const string name = "name";
		public const string TileShpeData = "TileShpeData";
		public const string unitData = "unitData";
		public const string position = "position";
	}
	private static BansheeGz.BGDatabase.BGMetaNested _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaNested MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaNested>(new BGId(4799327628856687378UL,3776090101215706293UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public D_TileShpeData f_TileShpeData
	{
		get => (D_TileShpeData) _f_TileShpeData[Index];
		set => _f_TileShpeData[Index] = value;
	}
	public D_UnitData f_unitData
	{
		get => (D_UnitData) _f_unitData[Index];
		set => _f_unitData[Index] = value;
	}
	public UnityEngine.Vector2 f_position
	{
		get => _f_position[Index];
		set => _f_position[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5119949781748048341UL, 1974210095801998015UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_TileShpeData;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_TileShpeData => _ufle12jhs77_f_TileShpeData ?? (_ufle12jhs77_f_TileShpeData = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationSingle>(MetaDefault, new BGId(5201128059908877541UL, 10865111936391984023UL), () => _ufle12jhs77_f_TileShpeData = null));
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_unitData;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_unitData => _ufle12jhs77_f_unitData ?? (_ufle12jhs77_f_unitData = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationSingle>(MetaDefault, new BGId(4832644335004946023UL, 16677909979451640761UL), () => _ufle12jhs77_f_unitData = null));
	private static BansheeGz.BGDatabase.BGFieldVector2 _ufle12jhs77_f_position;
	public static BansheeGz.BGDatabase.BGFieldVector2 _f_position => _ufle12jhs77_f_position ?? (_ufle12jhs77_f_position = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldVector2>(MetaDefault, new BGId(4996388341754236581UL, 9961606815976867004UL), () => _ufle12jhs77_f_position = null));
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_UnitStat.Factory _factory4_PFS = new D_UnitStat.Factory();
	private static readonly D_statDatas.Factory _factory5_PFS = new D_statDatas.Factory();
	private static readonly D_unitBuildData.Factory _factory6_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory7_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory8_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory9_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory10_PFS = new D_StageData.Factory();
	private D_unitBuildData() : base(MetaDefault) {}
	private D_unitBuildData(BGId id) : base(MetaDefault, id) {}
	private D_unitBuildData(BGMetaEntity meta) : base(meta) {}
	private D_unitBuildData(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_unitBuildData FindEntity(Predicate<D_unitBuildData> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_unitBuildData> FindEntities(Predicate<D_unitBuildData> filter, List<D_unitBuildData> result=null, Comparison<D_unitBuildData> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_unitBuildData> action, Predicate<D_unitBuildData> filter=null, Comparison<D_unitBuildData> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_unitBuildData GetEntity(BGId entityId) => (D_unitBuildData) MetaDefault.GetEntity(entityId);
	public static D_unitBuildData GetEntity(int index) => (D_unitBuildData) MetaDefault[index];
	public static D_unitBuildData GetEntity(string entityName) => (D_unitBuildData) MetaDefault.GetEntity(entityName);
	public static D_unitBuildData NewEntity() => (D_unitBuildData) MetaDefault.NewEntity();
	public static D_unitBuildData NewEntity(BGId entityId) => (D_unitBuildData) MetaDefault.NewEntity(entityId);
	public static D_unitBuildData NewEntity(Action<D_unitBuildData> callback) => (D_unitBuildData) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_unitBuildData)entity)));
	public static D_unitBuildData NewEntity(D_TileShpeData owner) => (D_unitBuildData) MetaDefault.NewEntity(owner);
	public static D_unitBuildData NewEntity(D_TileShpeData owner, BGId entityId) => (D_unitBuildData) MetaDefault.NewEntity(owner, entityId);
	public static D_unitBuildData NewEntity(D_TileShpeData owner, Action<D_unitBuildData> callback) => (D_unitBuildData) MetaDefault.NewEntity(owner, new BGMetaEntity.NewEntityContext(entity => callback((D_unitBuildData)entity)));
}

public partial class D_UnitShopChanceData : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_UnitShopChanceData(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_UnitShopChanceData(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "UnitShopChanceData";
		public const string name = "name";
		public const string shopLevel = "shopLevel";
		public const string upgradeCost = "upgradeCost";
		public const string normalGradeChance = "normalGradeChance";
		public const string rareGradeChance = "rareGradeChance";
		public const string epicGradeChance = "epicGradeChance";
		public const string legendaryGradeChance = "legendaryGradeChance";
		public const string mythicGradeChance = "mythicGradeChance";
		public const string ShopLevel = "ShopLevel";
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4664970763188900203UL,12080311741352732819UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public System.Int32 f_shopLevel
	{
		get => _f_shopLevel[Index];
		set => _f_shopLevel[Index] = value;
	}
	public System.Int32 f_upgradeCost
	{
		get => _f_upgradeCost[Index];
		set => _f_upgradeCost[Index] = value;
	}
	public System.Int32 f_normalGradeChance
	{
		get => _f_normalGradeChance[Index];
		set => _f_normalGradeChance[Index] = value;
	}
	public System.Int32 f_rareGradeChance
	{
		get => _f_rareGradeChance[Index];
		set => _f_rareGradeChance[Index] = value;
	}
	public System.Int32 f_epicGradeChance
	{
		get => _f_epicGradeChance[Index];
		set => _f_epicGradeChance[Index] = value;
	}
	public System.Int32 f_legendaryGradeChance
	{
		get => _f_legendaryGradeChance[Index];
		set => _f_legendaryGradeChance[Index] = value;
	}
	public System.Int32 f_mythicGradeChance
	{
		get => _f_mythicGradeChance[Index];
		set => _f_mythicGradeChance[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5700037316086172204UL, 9428115730578618498UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_shopLevel;
	public static BansheeGz.BGDatabase.BGFieldInt _f_shopLevel => _ufle12jhs77_f_shopLevel ?? (_ufle12jhs77_f_shopLevel = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5209453747907503739UL, 16616529657275590799UL), () => _ufle12jhs77_f_shopLevel = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_upgradeCost;
	public static BansheeGz.BGDatabase.BGFieldInt _f_upgradeCost => _ufle12jhs77_f_upgradeCost ?? (_ufle12jhs77_f_upgradeCost = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5544517854502321174UL, 16527826181851315888UL), () => _ufle12jhs77_f_upgradeCost = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_normalGradeChance;
	public static BansheeGz.BGDatabase.BGFieldInt _f_normalGradeChance => _ufle12jhs77_f_normalGradeChance ?? (_ufle12jhs77_f_normalGradeChance = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(4747667146126538070UL, 10838641894382133891UL), () => _ufle12jhs77_f_normalGradeChance = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_rareGradeChance;
	public static BansheeGz.BGDatabase.BGFieldInt _f_rareGradeChance => _ufle12jhs77_f_rareGradeChance ?? (_ufle12jhs77_f_rareGradeChance = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(4800310075837301652UL, 15965513266530679210UL), () => _ufle12jhs77_f_rareGradeChance = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_epicGradeChance;
	public static BansheeGz.BGDatabase.BGFieldInt _f_epicGradeChance => _ufle12jhs77_f_epicGradeChance ?? (_ufle12jhs77_f_epicGradeChance = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5751856468742030222UL, 11431852624877671084UL), () => _ufle12jhs77_f_epicGradeChance = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_legendaryGradeChance;
	public static BansheeGz.BGDatabase.BGFieldInt _f_legendaryGradeChance => _ufle12jhs77_f_legendaryGradeChance ?? (_ufle12jhs77_f_legendaryGradeChance = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5357090667896251197UL, 8100459591133873333UL), () => _ufle12jhs77_f_legendaryGradeChance = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_mythicGradeChance;
	public static BansheeGz.BGDatabase.BGFieldInt _f_mythicGradeChance => _ufle12jhs77_f_mythicGradeChance ?? (_ufle12jhs77_f_mythicGradeChance = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5683072619301050186UL, 1397330924013920176UL), () => _ufle12jhs77_f_mythicGradeChance = null));
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_ShopLevel;
	public static BansheeGz.BGDatabase.BGKey _ShopLevel => _edeht3sdad33_ShopLevel ?? (_edeht3sdad33_ShopLevel = BGCodeGenUtils.GetKey(MetaDefault, new BGId(5047775113214466118UL, 10985792114965795003UL), () => _edeht3sdad33_ShopLevel = null));
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_UnitStat.Factory _factory4_PFS = new D_UnitStat.Factory();
	private static readonly D_statDatas.Factory _factory5_PFS = new D_statDatas.Factory();
	private static readonly D_unitBuildData.Factory _factory6_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory7_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory8_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory9_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory10_PFS = new D_StageData.Factory();
	private D_UnitShopChanceData() : base(MetaDefault) {}
	private D_UnitShopChanceData(BGId id) : base(MetaDefault, id) {}
	private D_UnitShopChanceData(BGMetaEntity meta) : base(meta) {}
	private D_UnitShopChanceData(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_UnitShopChanceData FindEntity(Predicate<D_UnitShopChanceData> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_UnitShopChanceData> FindEntities(Predicate<D_UnitShopChanceData> filter, List<D_UnitShopChanceData> result=null, Comparison<D_UnitShopChanceData> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_UnitShopChanceData> action, Predicate<D_UnitShopChanceData> filter=null, Comparison<D_UnitShopChanceData> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_UnitShopChanceData GetEntity(BGId entityId) => (D_UnitShopChanceData) MetaDefault.GetEntity(entityId);
	public static D_UnitShopChanceData GetEntity(int index) => (D_UnitShopChanceData) MetaDefault[index];
	public static D_UnitShopChanceData GetEntity(string entityName) => (D_UnitShopChanceData) MetaDefault.GetEntity(entityName);
	public static D_UnitShopChanceData NewEntity() => (D_UnitShopChanceData) MetaDefault.NewEntity();
	public static D_UnitShopChanceData NewEntity(BGId entityId) => (D_UnitShopChanceData) MetaDefault.NewEntity(entityId);
	public static D_UnitShopChanceData NewEntity(Action<D_UnitShopChanceData> callback) => (D_UnitShopChanceData) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_UnitShopChanceData)entity)));
	public static D_UnitShopChanceData GetEntityByKeyShopLevel(System.Int32 shopLevel) => (D_UnitShopChanceData) _ShopLevel.GetEntityByKey<System.Int32>(shopLevel);
}

public partial class D_ObjectPoolData : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_ObjectPoolData(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_ObjectPoolData(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "ObjectPoolData";
		public const string name = "name";
		public const string AdrressablePath = "AdrressablePath";
		public const string initialSize = "initialSize";
		public const string SceneType = "SceneType";
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5551840002734483211UL,1845652086390232738UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public System.String f_AdrressablePath
	{
		get => _f_AdrressablePath[Index];
		set => _f_AdrressablePath[Index] = value;
	}
	public System.Int32 f_initialSize
	{
		get => _f_initialSize[Index];
		set => _f_initialSize[Index] = value;
	}
	public BGDatabaseEnum.SceneType f_SceneType
	{
		get => (BGDatabaseEnum.SceneType) _f_SceneType.GetStoredValue(Index);
		set => _f_SceneType.SetStoredValue(Index, (System.Int32) value);
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(4726680117178046135UL, 7587749471834620314UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_f_AdrressablePath;
	public static BansheeGz.BGDatabase.BGFieldString _f_AdrressablePath => _ufle12jhs77_f_AdrressablePath ?? (_ufle12jhs77_f_AdrressablePath = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5145773510652681096UL, 13372783320861883313UL), () => _ufle12jhs77_f_AdrressablePath = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_initialSize;
	public static BansheeGz.BGDatabase.BGFieldInt _f_initialSize => _ufle12jhs77_f_initialSize ?? (_ufle12jhs77_f_initialSize = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5695250943508857660UL, 15712297599622700168UL), () => _ufle12jhs77_f_initialSize = null));
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_f_SceneType;
	public static BansheeGz.BGDatabase.BGFieldEnum _f_SceneType => _ufle12jhs77_f_SceneType ?? (_ufle12jhs77_f_SceneType = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEnum>(MetaDefault, new BGId(5488174481991139823UL, 4171769970269031340UL), () => _ufle12jhs77_f_SceneType = null));
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_UnitStat.Factory _factory4_PFS = new D_UnitStat.Factory();
	private static readonly D_statDatas.Factory _factory5_PFS = new D_statDatas.Factory();
	private static readonly D_unitBuildData.Factory _factory6_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory7_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory8_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory9_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory10_PFS = new D_StageData.Factory();
	private D_ObjectPoolData() : base(MetaDefault) {}
	private D_ObjectPoolData(BGId id) : base(MetaDefault, id) {}
	private D_ObjectPoolData(BGMetaEntity meta) : base(meta) {}
	private D_ObjectPoolData(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_ObjectPoolData FindEntity(Predicate<D_ObjectPoolData> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_ObjectPoolData> FindEntities(Predicate<D_ObjectPoolData> filter, List<D_ObjectPoolData> result=null, Comparison<D_ObjectPoolData> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_ObjectPoolData> action, Predicate<D_ObjectPoolData> filter=null, Comparison<D_ObjectPoolData> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_ObjectPoolData GetEntity(BGId entityId) => (D_ObjectPoolData) MetaDefault.GetEntity(entityId);
	public static D_ObjectPoolData GetEntity(int index) => (D_ObjectPoolData) MetaDefault[index];
	public static D_ObjectPoolData GetEntity(string entityName) => (D_ObjectPoolData) MetaDefault.GetEntity(entityName);
	public static D_ObjectPoolData NewEntity() => (D_ObjectPoolData) MetaDefault.NewEntity();
	public static D_ObjectPoolData NewEntity(BGId entityId) => (D_ObjectPoolData) MetaDefault.NewEntity(entityId);
	public static D_ObjectPoolData NewEntity(Action<D_ObjectPoolData> callback) => (D_ObjectPoolData) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_ObjectPoolData)entity)));
}

public partial class D_WaveData : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_WaveData(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_WaveData(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "WaveData";
		public const string name = "name";
		public const string SpawnEnemyName = "SpawnEnemyName";
		public const string Count = "Count";
		public const string SpawnDelay = "SpawnDelay";
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4778501538320982376UL,14576375936561994928UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public System.String f_SpawnEnemyName
	{
		get => _f_SpawnEnemyName[Index];
		set => _f_SpawnEnemyName[Index] = value;
	}
	public System.Int32 f_Count
	{
		get => _f_Count[Index];
		set => _f_Count[Index] = value;
	}
	public System.Int32 f_SpawnDelay
	{
		get => _f_SpawnDelay[Index];
		set => _f_SpawnDelay[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(4703004299164658167UL, 14816338927607609278UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_f_SpawnEnemyName;
	public static BansheeGz.BGDatabase.BGFieldString _f_SpawnEnemyName => _ufle12jhs77_f_SpawnEnemyName ?? (_ufle12jhs77_f_SpawnEnemyName = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5304298841188339061UL, 3832707851484607413UL), () => _ufle12jhs77_f_SpawnEnemyName = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_Count;
	public static BansheeGz.BGDatabase.BGFieldInt _f_Count => _ufle12jhs77_f_Count ?? (_ufle12jhs77_f_Count = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5092892181665427764UL, 4682587192534409914UL), () => _ufle12jhs77_f_Count = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_SpawnDelay;
	public static BansheeGz.BGDatabase.BGFieldInt _f_SpawnDelay => _ufle12jhs77_f_SpawnDelay ?? (_ufle12jhs77_f_SpawnDelay = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5605747136360802954UL, 5875118332717163455UL), () => _ufle12jhs77_f_SpawnDelay = null));
	public List<Alias_rifegrt_StageData> RelatedStageDataListUsingWaveDataRelation => BGCodeGenUtils.GetRelatedInbound<Alias_rifegrt_StageData>(Alias_rifegrt_StageData._f_WaveData, Id);
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_UnitStat.Factory _factory4_PFS = new D_UnitStat.Factory();
	private static readonly D_statDatas.Factory _factory5_PFS = new D_statDatas.Factory();
	private static readonly D_unitBuildData.Factory _factory6_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory7_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory8_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory9_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory10_PFS = new D_StageData.Factory();
	private D_WaveData() : base(MetaDefault) {}
	private D_WaveData(BGId id) : base(MetaDefault, id) {}
	private D_WaveData(BGMetaEntity meta) : base(meta) {}
	private D_WaveData(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_WaveData FindEntity(Predicate<D_WaveData> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_WaveData> FindEntities(Predicate<D_WaveData> filter, List<D_WaveData> result=null, Comparison<D_WaveData> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_WaveData> action, Predicate<D_WaveData> filter=null, Comparison<D_WaveData> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_WaveData GetEntity(BGId entityId) => (D_WaveData) MetaDefault.GetEntity(entityId);
	public static D_WaveData GetEntity(int index) => (D_WaveData) MetaDefault[index];
	public static D_WaveData GetEntity(string entityName) => (D_WaveData) MetaDefault.GetEntity(entityName);
	public static D_WaveData NewEntity() => (D_WaveData) MetaDefault.NewEntity();
	public static D_WaveData NewEntity(BGId entityId) => (D_WaveData) MetaDefault.NewEntity(entityId);
	public static D_WaveData NewEntity(Action<D_WaveData> callback) => (D_WaveData) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_WaveData)entity)));
}

public partial class D_StageData : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_StageData(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_StageData(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "StageData";
		public const string name = "name";
		public const string StageNumber = "StageNumber";
		public const string WaveDelayTime = "WaveDelayTime";
		public const string WaveData = "WaveData";
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4767129084614671086UL,3391790421238320565UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public System.Int32 f_StageNumber
	{
		get => _f_StageNumber[Index];
		set => _f_StageNumber[Index] = value;
	}
	public System.Int32 f_WaveDelayTime
	{
		get => _f_WaveDelayTime[Index];
		set => _f_WaveDelayTime[Index] = value;
	}
	public List<D_WaveData> f_WaveData
	{
		get => BGCodeGenUtils.MultipleRelationGet<D_WaveData>(_f_WaveData, Index);
		set => BGCodeGenUtils.MultipleRelationSet<D_WaveData>(_f_WaveData, Index, value);
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5107560990730887598UL, 14806839362490910632UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_StageNumber;
	public static BansheeGz.BGDatabase.BGFieldInt _f_StageNumber => _ufle12jhs77_f_StageNumber ?? (_ufle12jhs77_f_StageNumber = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5727885512308789180UL, 5793001234893590713UL), () => _ufle12jhs77_f_StageNumber = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_WaveDelayTime;
	public static BansheeGz.BGDatabase.BGFieldInt _f_WaveDelayTime => _ufle12jhs77_f_WaveDelayTime ?? (_ufle12jhs77_f_WaveDelayTime = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5383411614700704003UL, 1149947372817794453UL), () => _ufle12jhs77_f_WaveDelayTime = null));
	private static BansheeGz.BGDatabase.BGFieldRelationMultiple _ufle12jhs77_f_WaveData;
	public static BansheeGz.BGDatabase.BGFieldRelationMultiple _f_WaveData => _ufle12jhs77_f_WaveData ?? (_ufle12jhs77_f_WaveData = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationMultiple>(MetaDefault, new BGId(5213647395619301713UL, 7900555549665711264UL), () => _ufle12jhs77_f_WaveData = null));
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_UnitStat.Factory _factory4_PFS = new D_UnitStat.Factory();
	private static readonly D_statDatas.Factory _factory5_PFS = new D_statDatas.Factory();
	private static readonly D_unitBuildData.Factory _factory6_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory7_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory8_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory9_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory10_PFS = new D_StageData.Factory();
	private D_StageData() : base(MetaDefault) {}
	private D_StageData(BGId id) : base(MetaDefault, id) {}
	private D_StageData(BGMetaEntity meta) : base(meta) {}
	private D_StageData(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_StageData FindEntity(Predicate<D_StageData> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_StageData> FindEntities(Predicate<D_StageData> filter, List<D_StageData> result=null, Comparison<D_StageData> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_StageData> action, Predicate<D_StageData> filter=null, Comparison<D_StageData> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_StageData GetEntity(BGId entityId) => (D_StageData) MetaDefault.GetEntity(entityId);
	public static D_StageData GetEntity(int index) => (D_StageData) MetaDefault[index];
	public static D_StageData GetEntity(string entityName) => (D_StageData) MetaDefault.GetEntity(entityName);
	public static D_StageData NewEntity() => (D_StageData) MetaDefault.NewEntity();
	public static D_StageData NewEntity(BGId entityId) => (D_StageData) MetaDefault.NewEntity(entityId);
	public static D_StageData NewEntity(Action<D_StageData> callback) => (D_StageData) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_StageData)entity)));
	public void f_WaveData_Add(D_WaveData related) => BGCodeGenUtils.MultipleRelationAdd(_f_WaveData, Index, related);
	public void f_WaveData_Remove(D_WaveData related) => BGCodeGenUtils.MultipleRelationRemove(_f_WaveData, Index, related);
}
#pragma warning restore 414
