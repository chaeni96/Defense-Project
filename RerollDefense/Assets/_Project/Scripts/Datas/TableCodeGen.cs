using System;
using System.Collections.Generic;
using BansheeGz.BGDatabase;
using Alias_rifegrt_UnitData = D_UnitData;
using Alias_rifegrt_unitBuildData = D_unitBuildData;
using Alias_rifegrt_SpecialTile = D_SpecialTile;
using Alias_rifegrt_StatBoosterData = D_StatBoosterData;
using Alias_rifegrt_EnemyData = D_EnemyData;
using Alias_rifegrt_StageData = D_StageData;
using Alias_rifegrt_enemyGroup = D_enemyGroup;
using Alias_rifegrt_WildCardData = D_WildCardData;

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

#pragma warning disable 414

public partial class D_TileShpeData : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_TileShpeData(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_TileShpeData(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "TileShpeData";
		public const string name = "name";
		public const string unitBuildData = "unitBuildData";
		public const string grade = "grade";
		public const string Cost = "Cost";
		public const string TileShpae = "TileShpae";
		public const string ShopGrade = "ShopGrade";
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5526519764914468050UL,4239600642928235181UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public List<D_unitBuildData> f_unitBuildData => BGCodeGenUtils.GetNested<D_unitBuildData>(_f_unitBuildData, Index);
	public BGDatabaseEnum.UnitGrade f_grade
	{
		get => (BGDatabaseEnum.UnitGrade) _f_grade.GetStoredValue(Index);
		set => _f_grade.SetStoredValue(Index, (System.Int32) value);
	}
	public System.Int32 f_Cost
	{
		get => _f_Cost[Index];
		set => _f_Cost[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(4612699089538755472UL, 15389567449175696803UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldNested _ufle12jhs77_f_unitBuildData;
	public static BansheeGz.BGDatabase.BGFieldNested _f_unitBuildData => _ufle12jhs77_f_unitBuildData ?? (_ufle12jhs77_f_unitBuildData = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldNested>(MetaDefault, new BGId(5267104093635224925UL, 11893930471853365640UL), () => _ufle12jhs77_f_unitBuildData = null));
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_f_grade;
	public static BansheeGz.BGDatabase.BGFieldEnum _f_grade => _ufle12jhs77_f_grade ?? (_ufle12jhs77_f_grade = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEnum>(MetaDefault, new BGId(5085254489454765700UL, 2735600988159512248UL), () => _ufle12jhs77_f_grade = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_Cost;
	public static BansheeGz.BGDatabase.BGFieldInt _f_Cost => _ufle12jhs77_f_Cost ?? (_ufle12jhs77_f_Cost = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5033112527408708228UL, 18365848753655382442UL), () => _ufle12jhs77_f_Cost = null));
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_TileShpae;
	public static BansheeGz.BGDatabase.BGKey _TileShpae => _edeht3sdad33_TileShpae ?? (_edeht3sdad33_TileShpae = BGCodeGenUtils.GetKey(MetaDefault, new BGId(4974985753661443278UL, 14549488637077833392UL), () => _edeht3sdad33_TileShpae = null));
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_ShopGrade;
	public static BansheeGz.BGDatabase.BGKey _ShopGrade => _edeht3sdad33_ShopGrade ?? (_edeht3sdad33_ShopGrade = BGCodeGenUtils.GetKey(MetaDefault, new BGId(5679847359208220457UL, 15582120046338116030UL), () => _edeht3sdad33_ShopGrade = null));
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_unitBuildData.Factory _factory4_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory5_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory6_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory7_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory8_PFS = new D_StageData.Factory();
	private static readonly D_EnemyData.Factory _factory9_PFS = new D_EnemyData.Factory();
	private static readonly D_enemyGroup.Factory _factory10_PFS = new D_enemyGroup.Factory();
	private static readonly D_TilePosData.Factory _factory11_PFS = new D_TilePosData.Factory();
	private static readonly D_ObstacleTileMapData.Factory _factory12_PFS = new D_ObstacleTileMapData.Factory();
	private static readonly D_MapData.Factory _factory13_PFS = new D_MapData.Factory();
	private static readonly D_SpecialTile.Factory _factory14_PFS = new D_SpecialTile.Factory();
	private static readonly D_UnitsStat.Factory _factory15_PFS = new D_UnitsStat.Factory();
	private static readonly D_WildCardData.Factory _factory16_PFS = new D_WildCardData.Factory();
	private static readonly D_StatBoosterData.Factory _factory17_PFS = new D_StatBoosterData.Factory();
	private static readonly D_BoosterStats.Factory _factory18_PFS = new D_BoosterStats.Factory();
	private D_TileShpeData() : base(MetaDefault) {}
	private D_TileShpeData(BGId id) : base(MetaDefault, id) {}
	private D_TileShpeData(BGMetaEntity meta) : base(meta) {}
	private D_TileShpeData(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_TileShpeData FindEntity(Predicate<D_TileShpeData> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_TileShpeData> FindEntities(Predicate<D_TileShpeData> filter, List<D_TileShpeData> result=null, Comparison<D_TileShpeData> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_TileShpeData> action, Predicate<D_TileShpeData> filter=null, Comparison<D_TileShpeData> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_TileShpeData GetEntity(BGId entityId) => (D_TileShpeData) MetaDefault.GetEntity(entityId);
	public static D_TileShpeData GetEntity(int index) => (D_TileShpeData) MetaDefault[index];
	public static D_TileShpeData GetEntity(string entityName) => (D_TileShpeData) MetaDefault.GetEntity(entityName);
	public static D_TileShpeData NewEntity() => (D_TileShpeData) MetaDefault.NewEntity();
	public static D_TileShpeData NewEntity(BGId entityId) => (D_TileShpeData) MetaDefault.NewEntity(entityId);
	public static D_TileShpeData NewEntity(Action<D_TileShpeData> callback) => (D_TileShpeData) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_TileShpeData)entity)));
	public static D_TileShpeData GetEntityByKeyTileShpae(System.String name) => (D_TileShpeData) _TileShpae.GetEntityByKey<System.String>(name);
	public static D_TileShpeData GetEntityByKeyShopGrade(BGDatabaseEnum.UnitGrade grade) => (D_TileShpeData) _ShopGrade.GetEntityByKey<BGDatabaseEnum.UnitGrade>(grade);
}

public partial class D_LocalUserData : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_LocalUserData(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_LocalUserData(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "LocalUserData";
		public const string name = "name";
		public const string Gold = "Gold";
		public const string BoostDeck = "BoostDeck";
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4625932937206405802UL,11707112876743021752UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public System.Int32 f_Gold
	{
		get => _f_Gold[Index];
		set => _f_Gold[Index] = value;
	}
	public List<D_BoostDeck> f_BoostDeck => BGCodeGenUtils.GetNested<D_BoostDeck>(_f_BoostDeck, Index);
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5570864947923372496UL, 16114093359231942036UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_Gold;
	public static BansheeGz.BGDatabase.BGFieldInt _f_Gold => _ufle12jhs77_f_Gold ?? (_ufle12jhs77_f_Gold = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(4683257009118535675UL, 10952020009379038888UL), () => _ufle12jhs77_f_Gold = null));
	private static BansheeGz.BGDatabase.BGFieldNested _ufle12jhs77_f_BoostDeck;
	public static BansheeGz.BGDatabase.BGFieldNested _f_BoostDeck => _ufle12jhs77_f_BoostDeck ?? (_ufle12jhs77_f_BoostDeck = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldNested>(MetaDefault, new BGId(5417050161172596524UL, 5519351679311806344UL), () => _ufle12jhs77_f_BoostDeck = null));
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_unitBuildData.Factory _factory4_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory5_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory6_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory7_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory8_PFS = new D_StageData.Factory();
	private static readonly D_EnemyData.Factory _factory9_PFS = new D_EnemyData.Factory();
	private static readonly D_enemyGroup.Factory _factory10_PFS = new D_enemyGroup.Factory();
	private static readonly D_TilePosData.Factory _factory11_PFS = new D_TilePosData.Factory();
	private static readonly D_ObstacleTileMapData.Factory _factory12_PFS = new D_ObstacleTileMapData.Factory();
	private static readonly D_MapData.Factory _factory13_PFS = new D_MapData.Factory();
	private static readonly D_SpecialTile.Factory _factory14_PFS = new D_SpecialTile.Factory();
	private static readonly D_UnitsStat.Factory _factory15_PFS = new D_UnitsStat.Factory();
	private static readonly D_WildCardData.Factory _factory16_PFS = new D_WildCardData.Factory();
	private static readonly D_StatBoosterData.Factory _factory17_PFS = new D_StatBoosterData.Factory();
	private static readonly D_BoosterStats.Factory _factory18_PFS = new D_BoosterStats.Factory();
	private D_LocalUserData() : base(MetaDefault) {}
	private D_LocalUserData(BGId id) : base(MetaDefault, id) {}
	private D_LocalUserData(BGMetaEntity meta) : base(meta) {}
	private D_LocalUserData(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_LocalUserData FindEntity(Predicate<D_LocalUserData> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_LocalUserData> FindEntities(Predicate<D_LocalUserData> filter, List<D_LocalUserData> result=null, Comparison<D_LocalUserData> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_LocalUserData> action, Predicate<D_LocalUserData> filter=null, Comparison<D_LocalUserData> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_LocalUserData GetEntity(BGId entityId) => (D_LocalUserData) MetaDefault.GetEntity(entityId);
	public static D_LocalUserData GetEntity(int index) => (D_LocalUserData) MetaDefault[index];
	public static D_LocalUserData GetEntity(string entityName) => (D_LocalUserData) MetaDefault.GetEntity(entityName);
	public static D_LocalUserData NewEntity() => (D_LocalUserData) MetaDefault.NewEntity();
	public static D_LocalUserData NewEntity(BGId entityId) => (D_LocalUserData) MetaDefault.NewEntity(entityId);
	public static D_LocalUserData NewEntity(Action<D_LocalUserData> callback) => (D_LocalUserData) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_LocalUserData)entity)));
}

public partial class D_BoostDeck : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_BoostDeck(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_BoostDeck(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "BoostDeck";
		public const string name = "name";
		public const string LocalUserData = "LocalUserData";
	}
	private static BansheeGz.BGDatabase.BGMetaNested _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaNested MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaNested>(new BGId(5516462181609044315UL,3959596604375669897UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public D_LocalUserData f_LocalUserData
	{
		get => (D_LocalUserData) _f_LocalUserData[Index];
		set => _f_LocalUserData[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5197673912409473507UL, 13854933137346017459UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_LocalUserData;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_LocalUserData => _ufle12jhs77_f_LocalUserData ?? (_ufle12jhs77_f_LocalUserData = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationSingle>(MetaDefault, new BGId(5157762030127206670UL, 18423548300425324437UL), () => _ufle12jhs77_f_LocalUserData = null));
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_unitBuildData.Factory _factory4_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory5_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory6_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory7_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory8_PFS = new D_StageData.Factory();
	private static readonly D_EnemyData.Factory _factory9_PFS = new D_EnemyData.Factory();
	private static readonly D_enemyGroup.Factory _factory10_PFS = new D_enemyGroup.Factory();
	private static readonly D_TilePosData.Factory _factory11_PFS = new D_TilePosData.Factory();
	private static readonly D_ObstacleTileMapData.Factory _factory12_PFS = new D_ObstacleTileMapData.Factory();
	private static readonly D_MapData.Factory _factory13_PFS = new D_MapData.Factory();
	private static readonly D_SpecialTile.Factory _factory14_PFS = new D_SpecialTile.Factory();
	private static readonly D_UnitsStat.Factory _factory15_PFS = new D_UnitsStat.Factory();
	private static readonly D_WildCardData.Factory _factory16_PFS = new D_WildCardData.Factory();
	private static readonly D_StatBoosterData.Factory _factory17_PFS = new D_StatBoosterData.Factory();
	private static readonly D_BoosterStats.Factory _factory18_PFS = new D_BoosterStats.Factory();
	private D_BoostDeck() : base(MetaDefault) {}
	private D_BoostDeck(BGId id) : base(MetaDefault, id) {}
	private D_BoostDeck(BGMetaEntity meta) : base(meta) {}
	private D_BoostDeck(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_BoostDeck FindEntity(Predicate<D_BoostDeck> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_BoostDeck> FindEntities(Predicate<D_BoostDeck> filter, List<D_BoostDeck> result=null, Comparison<D_BoostDeck> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_BoostDeck> action, Predicate<D_BoostDeck> filter=null, Comparison<D_BoostDeck> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_BoostDeck GetEntity(BGId entityId) => (D_BoostDeck) MetaDefault.GetEntity(entityId);
	public static D_BoostDeck GetEntity(int index) => (D_BoostDeck) MetaDefault[index];
	public static D_BoostDeck GetEntity(string entityName) => (D_BoostDeck) MetaDefault.GetEntity(entityName);
	public static D_BoostDeck NewEntity() => (D_BoostDeck) MetaDefault.NewEntity();
	public static D_BoostDeck NewEntity(BGId entityId) => (D_BoostDeck) MetaDefault.NewEntity(entityId);
	public static D_BoostDeck NewEntity(Action<D_BoostDeck> callback) => (D_BoostDeck) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_BoostDeck)entity)));
	public static D_BoostDeck NewEntity(D_LocalUserData owner) => (D_BoostDeck) MetaDefault.NewEntity(owner);
	public static D_BoostDeck NewEntity(D_LocalUserData owner, BGId entityId) => (D_BoostDeck) MetaDefault.NewEntity(owner, entityId);
	public static D_BoostDeck NewEntity(D_LocalUserData owner, Action<D_BoostDeck> callback) => (D_BoostDeck) MetaDefault.NewEntity(owner, new BGMetaEntity.NewEntityContext(entity => callback((D_BoostDeck)entity)));
}

public partial class D_UnitData : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_UnitData(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_UnitData(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "UnitData";
		public const string name = "name";
		public const string UnitType = "UnitType";
		public const string UnitsStat = "UnitsStat";
		public const string SkillAttackType = "SkillAttackType";
		public const string UnitPoolingKey = "UnitPoolingKey";
		public const string NextLevelUnit = "NextLevelUnit";
		public const string SkillPoolingKey = "SkillPoolingKey";
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5098187849243670608UL,7590059858118427043UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public UnitType f_UnitType
	{
		get => (UnitType) _f_UnitType.GetStoredValue(Index);
		set => _f_UnitType.SetStoredValue(Index, (System.Int32) value);
	}
	public List<D_UnitsStat> f_UnitsStat => BGCodeGenUtils.GetNested<D_UnitsStat>(_f_UnitsStat, Index);
	public BGDatabaseEnum.SkillAttackType f_SkillAttackType
	{
		get => (BGDatabaseEnum.SkillAttackType) _f_SkillAttackType.GetStoredValue(Index);
		set => _f_SkillAttackType.SetStoredValue(Index, (System.Int32) value);
	}
	public D_ObjectPoolData f_UnitPoolingKey
	{
		get => (D_ObjectPoolData) _f_UnitPoolingKey[Index];
		set => _f_UnitPoolingKey[Index] = value;
	}
	public D_UnitData f_NextLevelUnit
	{
		get => (D_UnitData) _f_NextLevelUnit[Index];
		set => _f_NextLevelUnit[Index] = value;
	}
	public D_ObjectPoolData f_SkillPoolingKey
	{
		get => (D_ObjectPoolData) _f_SkillPoolingKey[Index];
		set => _f_SkillPoolingKey[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(4978381386621882592UL, 9377071611302703509UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_f_UnitType;
	public static BansheeGz.BGDatabase.BGFieldEnum _f_UnitType => _ufle12jhs77_f_UnitType ?? (_ufle12jhs77_f_UnitType = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEnum>(MetaDefault, new BGId(4766701231171255779UL, 8920734757428101046UL), () => _ufle12jhs77_f_UnitType = null));
	private static BansheeGz.BGDatabase.BGFieldNested _ufle12jhs77_f_UnitsStat;
	public static BansheeGz.BGDatabase.BGFieldNested _f_UnitsStat => _ufle12jhs77_f_UnitsStat ?? (_ufle12jhs77_f_UnitsStat = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldNested>(MetaDefault, new BGId(5236722205802388521UL, 8467347575873374648UL), () => _ufle12jhs77_f_UnitsStat = null));
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_f_SkillAttackType;
	public static BansheeGz.BGDatabase.BGFieldEnum _f_SkillAttackType => _ufle12jhs77_f_SkillAttackType ?? (_ufle12jhs77_f_SkillAttackType = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEnum>(MetaDefault, new BGId(5274816935596477599UL, 15588288739445877685UL), () => _ufle12jhs77_f_SkillAttackType = null));
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_UnitPoolingKey;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_UnitPoolingKey => _ufle12jhs77_f_UnitPoolingKey ?? (_ufle12jhs77_f_UnitPoolingKey = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationSingle>(MetaDefault, new BGId(4766850798404632622UL, 6480570574369079984UL), () => _ufle12jhs77_f_UnitPoolingKey = null));
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_NextLevelUnit;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_NextLevelUnit => _ufle12jhs77_f_NextLevelUnit ?? (_ufle12jhs77_f_NextLevelUnit = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationSingle>(MetaDefault, new BGId(5426984868221947997UL, 15426135925314411659UL), () => _ufle12jhs77_f_NextLevelUnit = null));
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_SkillPoolingKey;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_SkillPoolingKey => _ufle12jhs77_f_SkillPoolingKey ?? (_ufle12jhs77_f_SkillPoolingKey = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationSingle>(MetaDefault, new BGId(4721613304390874734UL, 7492828072908847792UL), () => _ufle12jhs77_f_SkillPoolingKey = null));
	public List<Alias_rifegrt_UnitData> RelatedUnitDataListUsingNextLevelUnitRelation => BGCodeGenUtils.GetRelatedInbound<Alias_rifegrt_UnitData>(Alias_rifegrt_UnitData._f_NextLevelUnit, Id);
	public List<Alias_rifegrt_unitBuildData> RelatedunitBuildDataListUsingunitDataRelation => BGCodeGenUtils.GetRelatedInbound<Alias_rifegrt_unitBuildData>(Alias_rifegrt_unitBuildData._f_unitData, Id);
	public List<Alias_rifegrt_SpecialTile> RelatedSpecialTileListUsingspecialObjectRelation => BGCodeGenUtils.GetRelatedInbound<Alias_rifegrt_SpecialTile>(Alias_rifegrt_SpecialTile._f_specialObject, Id);
	public List<Alias_rifegrt_StatBoosterData> RelatedStatBoosterDataListUsingTargetUnitListRelation => BGCodeGenUtils.GetRelatedInbound<Alias_rifegrt_StatBoosterData>(Alias_rifegrt_StatBoosterData._f_TargetUnitList, Id);
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_unitBuildData.Factory _factory4_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory5_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory6_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory7_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory8_PFS = new D_StageData.Factory();
	private static readonly D_EnemyData.Factory _factory9_PFS = new D_EnemyData.Factory();
	private static readonly D_enemyGroup.Factory _factory10_PFS = new D_enemyGroup.Factory();
	private static readonly D_TilePosData.Factory _factory11_PFS = new D_TilePosData.Factory();
	private static readonly D_ObstacleTileMapData.Factory _factory12_PFS = new D_ObstacleTileMapData.Factory();
	private static readonly D_MapData.Factory _factory13_PFS = new D_MapData.Factory();
	private static readonly D_SpecialTile.Factory _factory14_PFS = new D_SpecialTile.Factory();
	private static readonly D_UnitsStat.Factory _factory15_PFS = new D_UnitsStat.Factory();
	private static readonly D_WildCardData.Factory _factory16_PFS = new D_WildCardData.Factory();
	private static readonly D_StatBoosterData.Factory _factory17_PFS = new D_StatBoosterData.Factory();
	private static readonly D_BoosterStats.Factory _factory18_PFS = new D_BoosterStats.Factory();
	private D_UnitData() : base(MetaDefault) {}
	private D_UnitData(BGId id) : base(MetaDefault, id) {}
	private D_UnitData(BGMetaEntity meta) : base(meta) {}
	private D_UnitData(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_UnitData FindEntity(Predicate<D_UnitData> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_UnitData> FindEntities(Predicate<D_UnitData> filter, List<D_UnitData> result=null, Comparison<D_UnitData> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_UnitData> action, Predicate<D_UnitData> filter=null, Comparison<D_UnitData> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_UnitData GetEntity(BGId entityId) => (D_UnitData) MetaDefault.GetEntity(entityId);
	public static D_UnitData GetEntity(int index) => (D_UnitData) MetaDefault[index];
	public static D_UnitData GetEntity(string entityName) => (D_UnitData) MetaDefault.GetEntity(entityName);
	public static D_UnitData NewEntity() => (D_UnitData) MetaDefault.NewEntity();
	public static D_UnitData NewEntity(BGId entityId) => (D_UnitData) MetaDefault.NewEntity(entityId);
	public static D_UnitData NewEntity(Action<D_UnitData> callback) => (D_UnitData) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_UnitData)entity)));
}

public partial class D_unitBuildData : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_unitBuildData(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_unitBuildData(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "unitBuildData";
		public const string name = "name";
		public const string TileShpeData = "TileShpeData";
		public const string unitData = "unitData";
		public const string TilePos = "TilePos";
	}
	private static BansheeGz.BGDatabase.BGMetaNested _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaNested MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaNested>(new BGId(4799327628856687378UL,3776090101215706293UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public D_TileShpeData f_TileShpeData
	{
		get => (D_TileShpeData) _f_TileShpeData[Index];
		set => _f_TileShpeData[Index] = value;
	}
	public D_UnitData f_unitData
	{
		get => (D_UnitData) _f_unitData[Index];
		set => _f_unitData[Index] = value;
	}
	public D_TilePosData f_TilePos
	{
		get => (D_TilePosData) _f_TilePos[Index];
		set => _f_TilePos[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5119949781748048341UL, 1974210095801998015UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_TileShpeData;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_TileShpeData => _ufle12jhs77_f_TileShpeData ?? (_ufle12jhs77_f_TileShpeData = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationSingle>(MetaDefault, new BGId(5201128059908877541UL, 10865111936391984023UL), () => _ufle12jhs77_f_TileShpeData = null));
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_unitData;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_unitData => _ufle12jhs77_f_unitData ?? (_ufle12jhs77_f_unitData = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationSingle>(MetaDefault, new BGId(4832644335004946023UL, 16677909979451640761UL), () => _ufle12jhs77_f_unitData = null));
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_TilePos;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_TilePos => _ufle12jhs77_f_TilePos ?? (_ufle12jhs77_f_TilePos = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationSingle>(MetaDefault, new BGId(5477621657986745158UL, 3293241283015388857UL), () => _ufle12jhs77_f_TilePos = null));
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_unitBuildData.Factory _factory4_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory5_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory6_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory7_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory8_PFS = new D_StageData.Factory();
	private static readonly D_EnemyData.Factory _factory9_PFS = new D_EnemyData.Factory();
	private static readonly D_enemyGroup.Factory _factory10_PFS = new D_enemyGroup.Factory();
	private static readonly D_TilePosData.Factory _factory11_PFS = new D_TilePosData.Factory();
	private static readonly D_ObstacleTileMapData.Factory _factory12_PFS = new D_ObstacleTileMapData.Factory();
	private static readonly D_MapData.Factory _factory13_PFS = new D_MapData.Factory();
	private static readonly D_SpecialTile.Factory _factory14_PFS = new D_SpecialTile.Factory();
	private static readonly D_UnitsStat.Factory _factory15_PFS = new D_UnitsStat.Factory();
	private static readonly D_WildCardData.Factory _factory16_PFS = new D_WildCardData.Factory();
	private static readonly D_StatBoosterData.Factory _factory17_PFS = new D_StatBoosterData.Factory();
	private static readonly D_BoosterStats.Factory _factory18_PFS = new D_BoosterStats.Factory();
	private D_unitBuildData() : base(MetaDefault) {}
	private D_unitBuildData(BGId id) : base(MetaDefault, id) {}
	private D_unitBuildData(BGMetaEntity meta) : base(meta) {}
	private D_unitBuildData(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_unitBuildData FindEntity(Predicate<D_unitBuildData> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_unitBuildData> FindEntities(Predicate<D_unitBuildData> filter, List<D_unitBuildData> result=null, Comparison<D_unitBuildData> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_unitBuildData> action, Predicate<D_unitBuildData> filter=null, Comparison<D_unitBuildData> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_unitBuildData GetEntity(BGId entityId) => (D_unitBuildData) MetaDefault.GetEntity(entityId);
	public static D_unitBuildData GetEntity(int index) => (D_unitBuildData) MetaDefault[index];
	public static D_unitBuildData GetEntity(string entityName) => (D_unitBuildData) MetaDefault.GetEntity(entityName);
	public static D_unitBuildData NewEntity() => (D_unitBuildData) MetaDefault.NewEntity();
	public static D_unitBuildData NewEntity(BGId entityId) => (D_unitBuildData) MetaDefault.NewEntity(entityId);
	public static D_unitBuildData NewEntity(Action<D_unitBuildData> callback) => (D_unitBuildData) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_unitBuildData)entity)));
	public static D_unitBuildData NewEntity(D_TileShpeData owner) => (D_unitBuildData) MetaDefault.NewEntity(owner);
	public static D_unitBuildData NewEntity(D_TileShpeData owner, BGId entityId) => (D_unitBuildData) MetaDefault.NewEntity(owner, entityId);
	public static D_unitBuildData NewEntity(D_TileShpeData owner, Action<D_unitBuildData> callback) => (D_unitBuildData) MetaDefault.NewEntity(owner, new BGMetaEntity.NewEntityContext(entity => callback((D_unitBuildData)entity)));
}

public partial class D_UnitShopChanceData : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_UnitShopChanceData(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_UnitShopChanceData(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "UnitShopChanceData";
		public const string name = "name";
		public const string shopLevel = "shopLevel";
		public const string upgradeCost = "upgradeCost";
		public const string normalGradeChance = "normalGradeChance";
		public const string rareGradeChance = "rareGradeChance";
		public const string epicGradeChance = "epicGradeChance";
		public const string legendaryGradeChance = "legendaryGradeChance";
		public const string mythicGradeChance = "mythicGradeChance";
		public const string ShopLevel = "ShopLevel";
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4664970763188900203UL,12080311741352732819UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public System.Int32 f_shopLevel
	{
		get => _f_shopLevel[Index];
		set => _f_shopLevel[Index] = value;
	}
	public System.Int32 f_upgradeCost
	{
		get => _f_upgradeCost[Index];
		set => _f_upgradeCost[Index] = value;
	}
	public System.Int32 f_normalGradeChance
	{
		get => _f_normalGradeChance[Index];
		set => _f_normalGradeChance[Index] = value;
	}
	public System.Int32 f_rareGradeChance
	{
		get => _f_rareGradeChance[Index];
		set => _f_rareGradeChance[Index] = value;
	}
	public System.Int32 f_epicGradeChance
	{
		get => _f_epicGradeChance[Index];
		set => _f_epicGradeChance[Index] = value;
	}
	public System.Int32 f_legendaryGradeChance
	{
		get => _f_legendaryGradeChance[Index];
		set => _f_legendaryGradeChance[Index] = value;
	}
	public System.Int32 f_mythicGradeChance
	{
		get => _f_mythicGradeChance[Index];
		set => _f_mythicGradeChance[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5700037316086172204UL, 9428115730578618498UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_shopLevel;
	public static BansheeGz.BGDatabase.BGFieldInt _f_shopLevel => _ufle12jhs77_f_shopLevel ?? (_ufle12jhs77_f_shopLevel = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5209453747907503739UL, 16616529657275590799UL), () => _ufle12jhs77_f_shopLevel = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_upgradeCost;
	public static BansheeGz.BGDatabase.BGFieldInt _f_upgradeCost => _ufle12jhs77_f_upgradeCost ?? (_ufle12jhs77_f_upgradeCost = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5544517854502321174UL, 16527826181851315888UL), () => _ufle12jhs77_f_upgradeCost = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_normalGradeChance;
	public static BansheeGz.BGDatabase.BGFieldInt _f_normalGradeChance => _ufle12jhs77_f_normalGradeChance ?? (_ufle12jhs77_f_normalGradeChance = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(4747667146126538070UL, 10838641894382133891UL), () => _ufle12jhs77_f_normalGradeChance = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_rareGradeChance;
	public static BansheeGz.BGDatabase.BGFieldInt _f_rareGradeChance => _ufle12jhs77_f_rareGradeChance ?? (_ufle12jhs77_f_rareGradeChance = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(4800310075837301652UL, 15965513266530679210UL), () => _ufle12jhs77_f_rareGradeChance = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_epicGradeChance;
	public static BansheeGz.BGDatabase.BGFieldInt _f_epicGradeChance => _ufle12jhs77_f_epicGradeChance ?? (_ufle12jhs77_f_epicGradeChance = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5751856468742030222UL, 11431852624877671084UL), () => _ufle12jhs77_f_epicGradeChance = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_legendaryGradeChance;
	public static BansheeGz.BGDatabase.BGFieldInt _f_legendaryGradeChance => _ufle12jhs77_f_legendaryGradeChance ?? (_ufle12jhs77_f_legendaryGradeChance = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5357090667896251197UL, 8100459591133873333UL), () => _ufle12jhs77_f_legendaryGradeChance = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_mythicGradeChance;
	public static BansheeGz.BGDatabase.BGFieldInt _f_mythicGradeChance => _ufle12jhs77_f_mythicGradeChance ?? (_ufle12jhs77_f_mythicGradeChance = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5683072619301050186UL, 1397330924013920176UL), () => _ufle12jhs77_f_mythicGradeChance = null));
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_ShopLevel;
	public static BansheeGz.BGDatabase.BGKey _ShopLevel => _edeht3sdad33_ShopLevel ?? (_edeht3sdad33_ShopLevel = BGCodeGenUtils.GetKey(MetaDefault, new BGId(5047775113214466118UL, 10985792114965795003UL), () => _edeht3sdad33_ShopLevel = null));
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_unitBuildData.Factory _factory4_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory5_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory6_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory7_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory8_PFS = new D_StageData.Factory();
	private static readonly D_EnemyData.Factory _factory9_PFS = new D_EnemyData.Factory();
	private static readonly D_enemyGroup.Factory _factory10_PFS = new D_enemyGroup.Factory();
	private static readonly D_TilePosData.Factory _factory11_PFS = new D_TilePosData.Factory();
	private static readonly D_ObstacleTileMapData.Factory _factory12_PFS = new D_ObstacleTileMapData.Factory();
	private static readonly D_MapData.Factory _factory13_PFS = new D_MapData.Factory();
	private static readonly D_SpecialTile.Factory _factory14_PFS = new D_SpecialTile.Factory();
	private static readonly D_UnitsStat.Factory _factory15_PFS = new D_UnitsStat.Factory();
	private static readonly D_WildCardData.Factory _factory16_PFS = new D_WildCardData.Factory();
	private static readonly D_StatBoosterData.Factory _factory17_PFS = new D_StatBoosterData.Factory();
	private static readonly D_BoosterStats.Factory _factory18_PFS = new D_BoosterStats.Factory();
	private D_UnitShopChanceData() : base(MetaDefault) {}
	private D_UnitShopChanceData(BGId id) : base(MetaDefault, id) {}
	private D_UnitShopChanceData(BGMetaEntity meta) : base(meta) {}
	private D_UnitShopChanceData(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_UnitShopChanceData FindEntity(Predicate<D_UnitShopChanceData> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_UnitShopChanceData> FindEntities(Predicate<D_UnitShopChanceData> filter, List<D_UnitShopChanceData> result=null, Comparison<D_UnitShopChanceData> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_UnitShopChanceData> action, Predicate<D_UnitShopChanceData> filter=null, Comparison<D_UnitShopChanceData> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_UnitShopChanceData GetEntity(BGId entityId) => (D_UnitShopChanceData) MetaDefault.GetEntity(entityId);
	public static D_UnitShopChanceData GetEntity(int index) => (D_UnitShopChanceData) MetaDefault[index];
	public static D_UnitShopChanceData GetEntity(string entityName) => (D_UnitShopChanceData) MetaDefault.GetEntity(entityName);
	public static D_UnitShopChanceData NewEntity() => (D_UnitShopChanceData) MetaDefault.NewEntity();
	public static D_UnitShopChanceData NewEntity(BGId entityId) => (D_UnitShopChanceData) MetaDefault.NewEntity(entityId);
	public static D_UnitShopChanceData NewEntity(Action<D_UnitShopChanceData> callback) => (D_UnitShopChanceData) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_UnitShopChanceData)entity)));
	public static D_UnitShopChanceData GetEntityByKeyShopLevel(System.Int32 shopLevel) => (D_UnitShopChanceData) _ShopLevel.GetEntityByKey<System.Int32>(shopLevel);
}

public partial class D_ObjectPoolData : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_ObjectPoolData(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_ObjectPoolData(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "ObjectPoolData";
		public const string name = "name";
		public const string initialSize = "initialSize";
		public const string PoolObjectAddressableKey = "PoolObjectAddressableKey";
		public const string SceneType = "SceneType";
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5551840002734483211UL,1845652086390232738UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public System.Int32 f_initialSize
	{
		get => _f_initialSize[Index];
		set => _f_initialSize[Index] = value;
	}
	public System.String f_PoolObjectAddressableKey
	{
		get => _f_PoolObjectAddressableKey[Index];
		set => _f_PoolObjectAddressableKey[Index] = value;
	}
	public BGDatabaseEnum.SceneType f_SceneType
	{
		get => (BGDatabaseEnum.SceneType) _f_SceneType.GetStoredValue(Index);
		set => _f_SceneType.SetStoredValue(Index, (System.Int32) value);
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(4726680117178046135UL, 7587749471834620314UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_initialSize;
	public static BansheeGz.BGDatabase.BGFieldInt _f_initialSize => _ufle12jhs77_f_initialSize ?? (_ufle12jhs77_f_initialSize = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5695250943508857660UL, 15712297599622700168UL), () => _ufle12jhs77_f_initialSize = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_f_PoolObjectAddressableKey;
	public static BansheeGz.BGDatabase.BGFieldString _f_PoolObjectAddressableKey => _ufle12jhs77_f_PoolObjectAddressableKey ?? (_ufle12jhs77_f_PoolObjectAddressableKey = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5761746857104736445UL, 14334273623888862142UL), () => _ufle12jhs77_f_PoolObjectAddressableKey = null));
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_f_SceneType;
	public static BansheeGz.BGDatabase.BGFieldEnum _f_SceneType => _ufle12jhs77_f_SceneType ?? (_ufle12jhs77_f_SceneType = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEnum>(MetaDefault, new BGId(5559553276269621835UL, 2058884527795876747UL), () => _ufle12jhs77_f_SceneType = null));
	public List<Alias_rifegrt_UnitData> RelatedUnitDataListUsingUnitPoolingKeyRelation => BGCodeGenUtils.GetRelatedInbound<Alias_rifegrt_UnitData>(Alias_rifegrt_UnitData._f_UnitPoolingKey, Id);
	public List<Alias_rifegrt_UnitData> RelatedUnitDataListUsingSkillPoolingKeyRelation => BGCodeGenUtils.GetRelatedInbound<Alias_rifegrt_UnitData>(Alias_rifegrt_UnitData._f_SkillPoolingKey, Id);
	public List<Alias_rifegrt_EnemyData> RelatedEnemyDataListUsingObjectPoolKeyRelation => BGCodeGenUtils.GetRelatedInbound<Alias_rifegrt_EnemyData>(Alias_rifegrt_EnemyData._f_ObjectPoolKey, Id);
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_unitBuildData.Factory _factory4_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory5_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory6_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory7_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory8_PFS = new D_StageData.Factory();
	private static readonly D_EnemyData.Factory _factory9_PFS = new D_EnemyData.Factory();
	private static readonly D_enemyGroup.Factory _factory10_PFS = new D_enemyGroup.Factory();
	private static readonly D_TilePosData.Factory _factory11_PFS = new D_TilePosData.Factory();
	private static readonly D_ObstacleTileMapData.Factory _factory12_PFS = new D_ObstacleTileMapData.Factory();
	private static readonly D_MapData.Factory _factory13_PFS = new D_MapData.Factory();
	private static readonly D_SpecialTile.Factory _factory14_PFS = new D_SpecialTile.Factory();
	private static readonly D_UnitsStat.Factory _factory15_PFS = new D_UnitsStat.Factory();
	private static readonly D_WildCardData.Factory _factory16_PFS = new D_WildCardData.Factory();
	private static readonly D_StatBoosterData.Factory _factory17_PFS = new D_StatBoosterData.Factory();
	private static readonly D_BoosterStats.Factory _factory18_PFS = new D_BoosterStats.Factory();
	private D_ObjectPoolData() : base(MetaDefault) {}
	private D_ObjectPoolData(BGId id) : base(MetaDefault, id) {}
	private D_ObjectPoolData(BGMetaEntity meta) : base(meta) {}
	private D_ObjectPoolData(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_ObjectPoolData FindEntity(Predicate<D_ObjectPoolData> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_ObjectPoolData> FindEntities(Predicate<D_ObjectPoolData> filter, List<D_ObjectPoolData> result=null, Comparison<D_ObjectPoolData> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_ObjectPoolData> action, Predicate<D_ObjectPoolData> filter=null, Comparison<D_ObjectPoolData> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_ObjectPoolData GetEntity(BGId entityId) => (D_ObjectPoolData) MetaDefault.GetEntity(entityId);
	public static D_ObjectPoolData GetEntity(int index) => (D_ObjectPoolData) MetaDefault[index];
	public static D_ObjectPoolData GetEntity(string entityName) => (D_ObjectPoolData) MetaDefault.GetEntity(entityName);
	public static D_ObjectPoolData NewEntity() => (D_ObjectPoolData) MetaDefault.NewEntity();
	public static D_ObjectPoolData NewEntity(BGId entityId) => (D_ObjectPoolData) MetaDefault.NewEntity(entityId);
	public static D_ObjectPoolData NewEntity(Action<D_ObjectPoolData> callback) => (D_ObjectPoolData) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_ObjectPoolData)entity)));
}

public partial class D_WaveData : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_WaveData(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_WaveData(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "WaveData";
		public const string name = "name";
		public const string SpawnEnemyName = "SpawnEnemyName";
		public const string SpawnDelay = "SpawnDelay";
		public const string enemyGroup = "enemyGroup";
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4778501538320982376UL,14576375936561994928UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public System.String f_SpawnEnemyName
	{
		get => _f_SpawnEnemyName[Index];
		set => _f_SpawnEnemyName[Index] = value;
	}
	public System.Int32 f_SpawnDelay
	{
		get => _f_SpawnDelay[Index];
		set => _f_SpawnDelay[Index] = value;
	}
	public List<D_enemyGroup> f_enemyGroup => BGCodeGenUtils.GetNested<D_enemyGroup>(_f_enemyGroup, Index);
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(4703004299164658167UL, 14816338927607609278UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_f_SpawnEnemyName;
	public static BansheeGz.BGDatabase.BGFieldString _f_SpawnEnemyName => _ufle12jhs77_f_SpawnEnemyName ?? (_ufle12jhs77_f_SpawnEnemyName = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5304298841188339061UL, 3832707851484607413UL), () => _ufle12jhs77_f_SpawnEnemyName = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_SpawnDelay;
	public static BansheeGz.BGDatabase.BGFieldInt _f_SpawnDelay => _ufle12jhs77_f_SpawnDelay ?? (_ufle12jhs77_f_SpawnDelay = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5605747136360802954UL, 5875118332717163455UL), () => _ufle12jhs77_f_SpawnDelay = null));
	private static BansheeGz.BGDatabase.BGFieldNested _ufle12jhs77_f_enemyGroup;
	public static BansheeGz.BGDatabase.BGFieldNested _f_enemyGroup => _ufle12jhs77_f_enemyGroup ?? (_ufle12jhs77_f_enemyGroup = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldNested>(MetaDefault, new BGId(4964147500182563407UL, 2594969801821498292UL), () => _ufle12jhs77_f_enemyGroup = null));
	public List<Alias_rifegrt_StageData> RelatedStageDataListUsingWaveDataRelation => BGCodeGenUtils.GetRelatedInbound<Alias_rifegrt_StageData>(Alias_rifegrt_StageData._f_WaveData, Id);
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_unitBuildData.Factory _factory4_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory5_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory6_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory7_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory8_PFS = new D_StageData.Factory();
	private static readonly D_EnemyData.Factory _factory9_PFS = new D_EnemyData.Factory();
	private static readonly D_enemyGroup.Factory _factory10_PFS = new D_enemyGroup.Factory();
	private static readonly D_TilePosData.Factory _factory11_PFS = new D_TilePosData.Factory();
	private static readonly D_ObstacleTileMapData.Factory _factory12_PFS = new D_ObstacleTileMapData.Factory();
	private static readonly D_MapData.Factory _factory13_PFS = new D_MapData.Factory();
	private static readonly D_SpecialTile.Factory _factory14_PFS = new D_SpecialTile.Factory();
	private static readonly D_UnitsStat.Factory _factory15_PFS = new D_UnitsStat.Factory();
	private static readonly D_WildCardData.Factory _factory16_PFS = new D_WildCardData.Factory();
	private static readonly D_StatBoosterData.Factory _factory17_PFS = new D_StatBoosterData.Factory();
	private static readonly D_BoosterStats.Factory _factory18_PFS = new D_BoosterStats.Factory();
	private D_WaveData() : base(MetaDefault) {}
	private D_WaveData(BGId id) : base(MetaDefault, id) {}
	private D_WaveData(BGMetaEntity meta) : base(meta) {}
	private D_WaveData(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_WaveData FindEntity(Predicate<D_WaveData> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_WaveData> FindEntities(Predicate<D_WaveData> filter, List<D_WaveData> result=null, Comparison<D_WaveData> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_WaveData> action, Predicate<D_WaveData> filter=null, Comparison<D_WaveData> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_WaveData GetEntity(BGId entityId) => (D_WaveData) MetaDefault.GetEntity(entityId);
	public static D_WaveData GetEntity(int index) => (D_WaveData) MetaDefault[index];
	public static D_WaveData GetEntity(string entityName) => (D_WaveData) MetaDefault.GetEntity(entityName);
	public static D_WaveData NewEntity() => (D_WaveData) MetaDefault.NewEntity();
	public static D_WaveData NewEntity(BGId entityId) => (D_WaveData) MetaDefault.NewEntity(entityId);
	public static D_WaveData NewEntity(Action<D_WaveData> callback) => (D_WaveData) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_WaveData)entity)));
}

public partial class D_StageData : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_StageData(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_StageData(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "StageData";
		public const string name = "name";
		public const string StageNumber = "StageNumber";
		public const string WaveDelayTime = "WaveDelayTime";
		public const string WaveData = "WaveData";
		public const string StartTilePos = "StartTilePos";
		public const string EndTilePos = "EndTilePos";
		public const string mapData = "mapData";
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4767129084614671086UL,3391790421238320565UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public System.Int32 f_StageNumber
	{
		get => _f_StageNumber[Index];
		set => _f_StageNumber[Index] = value;
	}
	public System.Int32 f_WaveDelayTime
	{
		get => _f_WaveDelayTime[Index];
		set => _f_WaveDelayTime[Index] = value;
	}
	public List<D_WaveData> f_WaveData
	{
		get => BGCodeGenUtils.MultipleRelationGet<D_WaveData>(_f_WaveData, Index);
		set => BGCodeGenUtils.MultipleRelationSet<D_WaveData>(_f_WaveData, Index, value);
	}
	public UnityEngine.Vector2 f_StartTilePos
	{
		get => _f_StartTilePos[Index];
		set => _f_StartTilePos[Index] = value;
	}
	public UnityEngine.Vector2 f_EndTilePos
	{
		get => _f_EndTilePos[Index];
		set => _f_EndTilePos[Index] = value;
	}
	public D_MapData f_mapData
	{
		get => (D_MapData) _f_mapData[Index];
		set => _f_mapData[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5107560990730887598UL, 14806839362490910632UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_StageNumber;
	public static BansheeGz.BGDatabase.BGFieldInt _f_StageNumber => _ufle12jhs77_f_StageNumber ?? (_ufle12jhs77_f_StageNumber = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5727885512308789180UL, 5793001234893590713UL), () => _ufle12jhs77_f_StageNumber = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_WaveDelayTime;
	public static BansheeGz.BGDatabase.BGFieldInt _f_WaveDelayTime => _ufle12jhs77_f_WaveDelayTime ?? (_ufle12jhs77_f_WaveDelayTime = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5383411614700704003UL, 1149947372817794453UL), () => _ufle12jhs77_f_WaveDelayTime = null));
	private static BansheeGz.BGDatabase.BGFieldRelationMultiple _ufle12jhs77_f_WaveData;
	public static BansheeGz.BGDatabase.BGFieldRelationMultiple _f_WaveData => _ufle12jhs77_f_WaveData ?? (_ufle12jhs77_f_WaveData = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationMultiple>(MetaDefault, new BGId(5213647395619301713UL, 7900555549665711264UL), () => _ufle12jhs77_f_WaveData = null));
	private static BansheeGz.BGDatabase.BGFieldVector2 _ufle12jhs77_f_StartTilePos;
	public static BansheeGz.BGDatabase.BGFieldVector2 _f_StartTilePos => _ufle12jhs77_f_StartTilePos ?? (_ufle12jhs77_f_StartTilePos = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldVector2>(MetaDefault, new BGId(5046214170933828315UL, 3336255239437776575UL), () => _ufle12jhs77_f_StartTilePos = null));
	private static BansheeGz.BGDatabase.BGFieldVector2 _ufle12jhs77_f_EndTilePos;
	public static BansheeGz.BGDatabase.BGFieldVector2 _f_EndTilePos => _ufle12jhs77_f_EndTilePos ?? (_ufle12jhs77_f_EndTilePos = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldVector2>(MetaDefault, new BGId(4852896796202598556UL, 14737165945497110928UL), () => _ufle12jhs77_f_EndTilePos = null));
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_mapData;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_mapData => _ufle12jhs77_f_mapData ?? (_ufle12jhs77_f_mapData = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationSingle>(MetaDefault, new BGId(5561569271858242143UL, 14666200413546411709UL), () => _ufle12jhs77_f_mapData = null));
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_unitBuildData.Factory _factory4_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory5_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory6_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory7_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory8_PFS = new D_StageData.Factory();
	private static readonly D_EnemyData.Factory _factory9_PFS = new D_EnemyData.Factory();
	private static readonly D_enemyGroup.Factory _factory10_PFS = new D_enemyGroup.Factory();
	private static readonly D_TilePosData.Factory _factory11_PFS = new D_TilePosData.Factory();
	private static readonly D_ObstacleTileMapData.Factory _factory12_PFS = new D_ObstacleTileMapData.Factory();
	private static readonly D_MapData.Factory _factory13_PFS = new D_MapData.Factory();
	private static readonly D_SpecialTile.Factory _factory14_PFS = new D_SpecialTile.Factory();
	private static readonly D_UnitsStat.Factory _factory15_PFS = new D_UnitsStat.Factory();
	private static readonly D_WildCardData.Factory _factory16_PFS = new D_WildCardData.Factory();
	private static readonly D_StatBoosterData.Factory _factory17_PFS = new D_StatBoosterData.Factory();
	private static readonly D_BoosterStats.Factory _factory18_PFS = new D_BoosterStats.Factory();
	private D_StageData() : base(MetaDefault) {}
	private D_StageData(BGId id) : base(MetaDefault, id) {}
	private D_StageData(BGMetaEntity meta) : base(meta) {}
	private D_StageData(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_StageData FindEntity(Predicate<D_StageData> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_StageData> FindEntities(Predicate<D_StageData> filter, List<D_StageData> result=null, Comparison<D_StageData> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_StageData> action, Predicate<D_StageData> filter=null, Comparison<D_StageData> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_StageData GetEntity(BGId entityId) => (D_StageData) MetaDefault.GetEntity(entityId);
	public static D_StageData GetEntity(int index) => (D_StageData) MetaDefault[index];
	public static D_StageData GetEntity(string entityName) => (D_StageData) MetaDefault.GetEntity(entityName);
	public static D_StageData NewEntity() => (D_StageData) MetaDefault.NewEntity();
	public static D_StageData NewEntity(BGId entityId) => (D_StageData) MetaDefault.NewEntity(entityId);
	public static D_StageData NewEntity(Action<D_StageData> callback) => (D_StageData) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_StageData)entity)));
	public void f_WaveData_Add(D_WaveData related) => BGCodeGenUtils.MultipleRelationAdd(_f_WaveData, Index, related);
	public void f_WaveData_Remove(D_WaveData related) => BGCodeGenUtils.MultipleRelationRemove(_f_WaveData, Index, related);
}

public partial class D_EnemyData : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_EnemyData(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_EnemyData(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "EnemyData";
		public const string name = "name";
		public const string ObjectPoolKey = "ObjectPoolKey";
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4684773675657008422UL,7413063395127074720UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public D_ObjectPoolData f_ObjectPoolKey
	{
		get => (D_ObjectPoolData) _f_ObjectPoolKey[Index];
		set => _f_ObjectPoolKey[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(4938102425506461035UL, 13729837135102970805UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_ObjectPoolKey;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_ObjectPoolKey => _ufle12jhs77_f_ObjectPoolKey ?? (_ufle12jhs77_f_ObjectPoolKey = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationSingle>(MetaDefault, new BGId(5127858403270080390UL, 8458190447950556807UL), () => _ufle12jhs77_f_ObjectPoolKey = null));
	public List<Alias_rifegrt_enemyGroup> RelatedenemyGroupListUsingenemyRelation => BGCodeGenUtils.GetRelatedInbound<Alias_rifegrt_enemyGroup>(Alias_rifegrt_enemyGroup._f_enemy, Id);
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_unitBuildData.Factory _factory4_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory5_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory6_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory7_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory8_PFS = new D_StageData.Factory();
	private static readonly D_EnemyData.Factory _factory9_PFS = new D_EnemyData.Factory();
	private static readonly D_enemyGroup.Factory _factory10_PFS = new D_enemyGroup.Factory();
	private static readonly D_TilePosData.Factory _factory11_PFS = new D_TilePosData.Factory();
	private static readonly D_ObstacleTileMapData.Factory _factory12_PFS = new D_ObstacleTileMapData.Factory();
	private static readonly D_MapData.Factory _factory13_PFS = new D_MapData.Factory();
	private static readonly D_SpecialTile.Factory _factory14_PFS = new D_SpecialTile.Factory();
	private static readonly D_UnitsStat.Factory _factory15_PFS = new D_UnitsStat.Factory();
	private static readonly D_WildCardData.Factory _factory16_PFS = new D_WildCardData.Factory();
	private static readonly D_StatBoosterData.Factory _factory17_PFS = new D_StatBoosterData.Factory();
	private static readonly D_BoosterStats.Factory _factory18_PFS = new D_BoosterStats.Factory();
	private D_EnemyData() : base(MetaDefault) {}
	private D_EnemyData(BGId id) : base(MetaDefault, id) {}
	private D_EnemyData(BGMetaEntity meta) : base(meta) {}
	private D_EnemyData(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_EnemyData FindEntity(Predicate<D_EnemyData> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_EnemyData> FindEntities(Predicate<D_EnemyData> filter, List<D_EnemyData> result=null, Comparison<D_EnemyData> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_EnemyData> action, Predicate<D_EnemyData> filter=null, Comparison<D_EnemyData> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_EnemyData GetEntity(BGId entityId) => (D_EnemyData) MetaDefault.GetEntity(entityId);
	public static D_EnemyData GetEntity(int index) => (D_EnemyData) MetaDefault[index];
	public static D_EnemyData GetEntity(string entityName) => (D_EnemyData) MetaDefault.GetEntity(entityName);
	public static D_EnemyData NewEntity() => (D_EnemyData) MetaDefault.NewEntity();
	public static D_EnemyData NewEntity(BGId entityId) => (D_EnemyData) MetaDefault.NewEntity(entityId);
	public static D_EnemyData NewEntity(Action<D_EnemyData> callback) => (D_EnemyData) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_EnemyData)entity)));
}

public partial class D_enemyGroup : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_enemyGroup(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_enemyGroup(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "enemyGroup";
		public const string name = "name";
		public const string WaveData = "WaveData";
		public const string enemy = "enemy";
		public const string amount = "amount";
		public const string startDelay = "startDelay";
		public const string spawnInterval = "spawnInterval";
	}
	private static BansheeGz.BGDatabase.BGMetaNested _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaNested MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaNested>(new BGId(5687753539830049067UL,8128986279748860323UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public D_WaveData f_WaveData
	{
		get => (D_WaveData) _f_WaveData[Index];
		set => _f_WaveData[Index] = value;
	}
	public D_EnemyData f_enemy
	{
		get => (D_EnemyData) _f_enemy[Index];
		set => _f_enemy[Index] = value;
	}
	public System.Int32 f_amount
	{
		get => _f_amount[Index];
		set => _f_amount[Index] = value;
	}
	public System.Single f_startDelay
	{
		get => _f_startDelay[Index];
		set => _f_startDelay[Index] = value;
	}
	public System.Single f_spawnInterval
	{
		get => _f_spawnInterval[Index];
		set => _f_spawnInterval[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(4768439846877257123UL, 4564271178158591882UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_WaveData;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_WaveData => _ufle12jhs77_f_WaveData ?? (_ufle12jhs77_f_WaveData = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationSingle>(MetaDefault, new BGId(5178040207927123324UL, 10930269463117227672UL), () => _ufle12jhs77_f_WaveData = null));
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_enemy;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_enemy => _ufle12jhs77_f_enemy ?? (_ufle12jhs77_f_enemy = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationSingle>(MetaDefault, new BGId(5441185937166148425UL, 11239099587523972746UL), () => _ufle12jhs77_f_enemy = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_amount;
	public static BansheeGz.BGDatabase.BGFieldInt _f_amount => _ufle12jhs77_f_amount ?? (_ufle12jhs77_f_amount = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(4962475149476871349UL, 9923207979067693995UL), () => _ufle12jhs77_f_amount = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_f_startDelay;
	public static BansheeGz.BGDatabase.BGFieldFloat _f_startDelay => _ufle12jhs77_f_startDelay ?? (_ufle12jhs77_f_startDelay = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(4846873840890291861UL, 7938845544472428197UL), () => _ufle12jhs77_f_startDelay = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_f_spawnInterval;
	public static BansheeGz.BGDatabase.BGFieldFloat _f_spawnInterval => _ufle12jhs77_f_spawnInterval ?? (_ufle12jhs77_f_spawnInterval = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5152737681806592036UL, 4657384968853431938UL), () => _ufle12jhs77_f_spawnInterval = null));
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_unitBuildData.Factory _factory4_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory5_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory6_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory7_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory8_PFS = new D_StageData.Factory();
	private static readonly D_EnemyData.Factory _factory9_PFS = new D_EnemyData.Factory();
	private static readonly D_enemyGroup.Factory _factory10_PFS = new D_enemyGroup.Factory();
	private static readonly D_TilePosData.Factory _factory11_PFS = new D_TilePosData.Factory();
	private static readonly D_ObstacleTileMapData.Factory _factory12_PFS = new D_ObstacleTileMapData.Factory();
	private static readonly D_MapData.Factory _factory13_PFS = new D_MapData.Factory();
	private static readonly D_SpecialTile.Factory _factory14_PFS = new D_SpecialTile.Factory();
	private static readonly D_UnitsStat.Factory _factory15_PFS = new D_UnitsStat.Factory();
	private static readonly D_WildCardData.Factory _factory16_PFS = new D_WildCardData.Factory();
	private static readonly D_StatBoosterData.Factory _factory17_PFS = new D_StatBoosterData.Factory();
	private static readonly D_BoosterStats.Factory _factory18_PFS = new D_BoosterStats.Factory();
	private D_enemyGroup() : base(MetaDefault) {}
	private D_enemyGroup(BGId id) : base(MetaDefault, id) {}
	private D_enemyGroup(BGMetaEntity meta) : base(meta) {}
	private D_enemyGroup(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_enemyGroup FindEntity(Predicate<D_enemyGroup> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_enemyGroup> FindEntities(Predicate<D_enemyGroup> filter, List<D_enemyGroup> result=null, Comparison<D_enemyGroup> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_enemyGroup> action, Predicate<D_enemyGroup> filter=null, Comparison<D_enemyGroup> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_enemyGroup GetEntity(BGId entityId) => (D_enemyGroup) MetaDefault.GetEntity(entityId);
	public static D_enemyGroup GetEntity(int index) => (D_enemyGroup) MetaDefault[index];
	public static D_enemyGroup GetEntity(string entityName) => (D_enemyGroup) MetaDefault.GetEntity(entityName);
	public static D_enemyGroup NewEntity() => (D_enemyGroup) MetaDefault.NewEntity();
	public static D_enemyGroup NewEntity(BGId entityId) => (D_enemyGroup) MetaDefault.NewEntity(entityId);
	public static D_enemyGroup NewEntity(Action<D_enemyGroup> callback) => (D_enemyGroup) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_enemyGroup)entity)));
	public static D_enemyGroup NewEntity(D_WaveData owner) => (D_enemyGroup) MetaDefault.NewEntity(owner);
	public static D_enemyGroup NewEntity(D_WaveData owner, BGId entityId) => (D_enemyGroup) MetaDefault.NewEntity(owner, entityId);
	public static D_enemyGroup NewEntity(D_WaveData owner, Action<D_enemyGroup> callback) => (D_enemyGroup) MetaDefault.NewEntity(owner, new BGMetaEntity.NewEntityContext(entity => callback((D_enemyGroup)entity)));
}

public partial class D_TilePosData : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_TilePosData(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_TilePosData(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "TilePosData";
		public const string name = "name";
		public const string TilePos = "TilePos";
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5072550184591445031UL,4049629075303546763UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public UnityEngine.Vector2 f_TilePos
	{
		get => _f_TilePos[Index];
		set => _f_TilePos[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5513647067199918440UL, 3196144259926527926UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldVector2 _ufle12jhs77_f_TilePos;
	public static BansheeGz.BGDatabase.BGFieldVector2 _f_TilePos => _ufle12jhs77_f_TilePos ?? (_ufle12jhs77_f_TilePos = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldVector2>(MetaDefault, new BGId(5562668652953843408UL, 2900906368118453686UL), () => _ufle12jhs77_f_TilePos = null));
	public List<Alias_rifegrt_unitBuildData> RelatedunitBuildDataListUsingTilePosRelation => BGCodeGenUtils.GetRelatedInbound<Alias_rifegrt_unitBuildData>(Alias_rifegrt_unitBuildData._f_TilePos, Id);
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_unitBuildData.Factory _factory4_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory5_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory6_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory7_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory8_PFS = new D_StageData.Factory();
	private static readonly D_EnemyData.Factory _factory9_PFS = new D_EnemyData.Factory();
	private static readonly D_enemyGroup.Factory _factory10_PFS = new D_enemyGroup.Factory();
	private static readonly D_TilePosData.Factory _factory11_PFS = new D_TilePosData.Factory();
	private static readonly D_ObstacleTileMapData.Factory _factory12_PFS = new D_ObstacleTileMapData.Factory();
	private static readonly D_MapData.Factory _factory13_PFS = new D_MapData.Factory();
	private static readonly D_SpecialTile.Factory _factory14_PFS = new D_SpecialTile.Factory();
	private static readonly D_UnitsStat.Factory _factory15_PFS = new D_UnitsStat.Factory();
	private static readonly D_WildCardData.Factory _factory16_PFS = new D_WildCardData.Factory();
	private static readonly D_StatBoosterData.Factory _factory17_PFS = new D_StatBoosterData.Factory();
	private static readonly D_BoosterStats.Factory _factory18_PFS = new D_BoosterStats.Factory();
	private D_TilePosData() : base(MetaDefault) {}
	private D_TilePosData(BGId id) : base(MetaDefault, id) {}
	private D_TilePosData(BGMetaEntity meta) : base(meta) {}
	private D_TilePosData(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_TilePosData FindEntity(Predicate<D_TilePosData> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_TilePosData> FindEntities(Predicate<D_TilePosData> filter, List<D_TilePosData> result=null, Comparison<D_TilePosData> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_TilePosData> action, Predicate<D_TilePosData> filter=null, Comparison<D_TilePosData> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_TilePosData GetEntity(BGId entityId) => (D_TilePosData) MetaDefault.GetEntity(entityId);
	public static D_TilePosData GetEntity(int index) => (D_TilePosData) MetaDefault[index];
	public static D_TilePosData GetEntity(string entityName) => (D_TilePosData) MetaDefault.GetEntity(entityName);
	public static D_TilePosData NewEntity() => (D_TilePosData) MetaDefault.NewEntity();
	public static D_TilePosData NewEntity(BGId entityId) => (D_TilePosData) MetaDefault.NewEntity(entityId);
	public static D_TilePosData NewEntity(Action<D_TilePosData> callback) => (D_TilePosData) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_TilePosData)entity)));
}

public partial class D_ObstacleTileMapData : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_ObstacleTileMapData(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_ObstacleTileMapData(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "ObstacleTileMapData";
		public const string name = "name";
		public const string StageNumber = "StageNumber";
		public const string ObstacleAddressableKey = "ObstacleAddressableKey";
		public const string ObstacleTileType = "ObstacleTileType";
		public const string StageID = "StageID";
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5758885724365639225UL,6985595781335644047UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public System.Int32 f_StageNumber
	{
		get => _f_StageNumber[Index];
		set => _f_StageNumber[Index] = value;
	}
	public System.String f_ObstacleAddressableKey
	{
		get => _f_ObstacleAddressableKey[Index];
		set => _f_ObstacleAddressableKey[Index] = value;
	}
	public BGDatabaseEnum.ObstacleTileType f_ObstacleTileType
	{
		get => (BGDatabaseEnum.ObstacleTileType) _f_ObstacleTileType.GetStoredValue(Index);
		set => _f_ObstacleTileType.SetStoredValue(Index, (System.Int32) value);
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5122076134020259029UL, 17981120585241953922UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_StageNumber;
	public static BansheeGz.BGDatabase.BGFieldInt _f_StageNumber => _ufle12jhs77_f_StageNumber ?? (_ufle12jhs77_f_StageNumber = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5556671979502578053UL, 12474159028423526542UL), () => _ufle12jhs77_f_StageNumber = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_f_ObstacleAddressableKey;
	public static BansheeGz.BGDatabase.BGFieldString _f_ObstacleAddressableKey => _ufle12jhs77_f_ObstacleAddressableKey ?? (_ufle12jhs77_f_ObstacleAddressableKey = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4994500594652544960UL, 15342156812932836766UL), () => _ufle12jhs77_f_ObstacleAddressableKey = null));
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_f_ObstacleTileType;
	public static BansheeGz.BGDatabase.BGFieldEnum _f_ObstacleTileType => _ufle12jhs77_f_ObstacleTileType ?? (_ufle12jhs77_f_ObstacleTileType = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEnum>(MetaDefault, new BGId(5693260011756325544UL, 12672970599089641917UL), () => _ufle12jhs77_f_ObstacleTileType = null));
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_StageID;
	public static BansheeGz.BGDatabase.BGKey _StageID => _edeht3sdad33_StageID ?? (_edeht3sdad33_StageID = BGCodeGenUtils.GetKey(MetaDefault, new BGId(4722294791348354641UL, 4966515860168714379UL), () => _edeht3sdad33_StageID = null));
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_unitBuildData.Factory _factory4_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory5_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory6_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory7_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory8_PFS = new D_StageData.Factory();
	private static readonly D_EnemyData.Factory _factory9_PFS = new D_EnemyData.Factory();
	private static readonly D_enemyGroup.Factory _factory10_PFS = new D_enemyGroup.Factory();
	private static readonly D_TilePosData.Factory _factory11_PFS = new D_TilePosData.Factory();
	private static readonly D_ObstacleTileMapData.Factory _factory12_PFS = new D_ObstacleTileMapData.Factory();
	private static readonly D_MapData.Factory _factory13_PFS = new D_MapData.Factory();
	private static readonly D_SpecialTile.Factory _factory14_PFS = new D_SpecialTile.Factory();
	private static readonly D_UnitsStat.Factory _factory15_PFS = new D_UnitsStat.Factory();
	private static readonly D_WildCardData.Factory _factory16_PFS = new D_WildCardData.Factory();
	private static readonly D_StatBoosterData.Factory _factory17_PFS = new D_StatBoosterData.Factory();
	private static readonly D_BoosterStats.Factory _factory18_PFS = new D_BoosterStats.Factory();
	private D_ObstacleTileMapData() : base(MetaDefault) {}
	private D_ObstacleTileMapData(BGId id) : base(MetaDefault, id) {}
	private D_ObstacleTileMapData(BGMetaEntity meta) : base(meta) {}
	private D_ObstacleTileMapData(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_ObstacleTileMapData FindEntity(Predicate<D_ObstacleTileMapData> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_ObstacleTileMapData> FindEntities(Predicate<D_ObstacleTileMapData> filter, List<D_ObstacleTileMapData> result=null, Comparison<D_ObstacleTileMapData> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_ObstacleTileMapData> action, Predicate<D_ObstacleTileMapData> filter=null, Comparison<D_ObstacleTileMapData> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_ObstacleTileMapData GetEntity(BGId entityId) => (D_ObstacleTileMapData) MetaDefault.GetEntity(entityId);
	public static D_ObstacleTileMapData GetEntity(int index) => (D_ObstacleTileMapData) MetaDefault[index];
	public static D_ObstacleTileMapData GetEntity(string entityName) => (D_ObstacleTileMapData) MetaDefault.GetEntity(entityName);
	public static D_ObstacleTileMapData NewEntity() => (D_ObstacleTileMapData) MetaDefault.NewEntity();
	public static D_ObstacleTileMapData NewEntity(BGId entityId) => (D_ObstacleTileMapData) MetaDefault.NewEntity(entityId);
	public static D_ObstacleTileMapData NewEntity(Action<D_ObstacleTileMapData> callback) => (D_ObstacleTileMapData) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_ObstacleTileMapData)entity)));
	public static D_ObstacleTileMapData GetEntityByKeyStageID(System.Int32 StageNumber) => (D_ObstacleTileMapData) _StageID.GetEntityByKey<System.Int32>(StageNumber);
}

public partial class D_MapData : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_MapData(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_MapData(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "MapData";
		public const string name = "name";
		public const string specialTiles = "specialTiles";
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4908545487314207604UL,18299589279296068736UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public List<D_SpecialTile> f_specialTiles => BGCodeGenUtils.GetNested<D_SpecialTile>(_f_specialTiles, Index);
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5719801111616681580UL, 17245377735577054864UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldNested _ufle12jhs77_f_specialTiles;
	public static BansheeGz.BGDatabase.BGFieldNested _f_specialTiles => _ufle12jhs77_f_specialTiles ?? (_ufle12jhs77_f_specialTiles = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldNested>(MetaDefault, new BGId(5244751714002308515UL, 5836463201650911643UL), () => _ufle12jhs77_f_specialTiles = null));
	public List<Alias_rifegrt_StageData> RelatedStageDataListUsingmapDataRelation => BGCodeGenUtils.GetRelatedInbound<Alias_rifegrt_StageData>(Alias_rifegrt_StageData._f_mapData, Id);
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_unitBuildData.Factory _factory4_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory5_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory6_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory7_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory8_PFS = new D_StageData.Factory();
	private static readonly D_EnemyData.Factory _factory9_PFS = new D_EnemyData.Factory();
	private static readonly D_enemyGroup.Factory _factory10_PFS = new D_enemyGroup.Factory();
	private static readonly D_TilePosData.Factory _factory11_PFS = new D_TilePosData.Factory();
	private static readonly D_ObstacleTileMapData.Factory _factory12_PFS = new D_ObstacleTileMapData.Factory();
	private static readonly D_MapData.Factory _factory13_PFS = new D_MapData.Factory();
	private static readonly D_SpecialTile.Factory _factory14_PFS = new D_SpecialTile.Factory();
	private static readonly D_UnitsStat.Factory _factory15_PFS = new D_UnitsStat.Factory();
	private static readonly D_WildCardData.Factory _factory16_PFS = new D_WildCardData.Factory();
	private static readonly D_StatBoosterData.Factory _factory17_PFS = new D_StatBoosterData.Factory();
	private static readonly D_BoosterStats.Factory _factory18_PFS = new D_BoosterStats.Factory();
	private D_MapData() : base(MetaDefault) {}
	private D_MapData(BGId id) : base(MetaDefault, id) {}
	private D_MapData(BGMetaEntity meta) : base(meta) {}
	private D_MapData(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_MapData FindEntity(Predicate<D_MapData> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_MapData> FindEntities(Predicate<D_MapData> filter, List<D_MapData> result=null, Comparison<D_MapData> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_MapData> action, Predicate<D_MapData> filter=null, Comparison<D_MapData> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_MapData GetEntity(BGId entityId) => (D_MapData) MetaDefault.GetEntity(entityId);
	public static D_MapData GetEntity(int index) => (D_MapData) MetaDefault[index];
	public static D_MapData GetEntity(string entityName) => (D_MapData) MetaDefault.GetEntity(entityName);
	public static D_MapData NewEntity() => (D_MapData) MetaDefault.NewEntity();
	public static D_MapData NewEntity(BGId entityId) => (D_MapData) MetaDefault.NewEntity(entityId);
	public static D_MapData NewEntity(Action<D_MapData> callback) => (D_MapData) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_MapData)entity)));
}

public partial class D_SpecialTile : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_SpecialTile(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_SpecialTile(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "SpecialTile";
		public const string name = "name";
		public const string MapData = "MapData";
		public const string specialObject = "specialObject";
		public const string cellPosition = "cellPosition";
	}
	private static BansheeGz.BGDatabase.BGMetaNested _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaNested MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaNested>(new BGId(5262619728582080424UL,5342422265480733882UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public D_MapData f_MapData
	{
		get => (D_MapData) _f_MapData[Index];
		set => _f_MapData[Index] = value;
	}
	public D_UnitData f_specialObject
	{
		get => (D_UnitData) _f_specialObject[Index];
		set => _f_specialObject[Index] = value;
	}
	public UnityEngine.Vector2 f_cellPosition
	{
		get => _f_cellPosition[Index];
		set => _f_cellPosition[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(4992590249030401474UL, 2817537600547812777UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_MapData;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_MapData => _ufle12jhs77_f_MapData ?? (_ufle12jhs77_f_MapData = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationSingle>(MetaDefault, new BGId(5484946033078379939UL, 14582839010964032951UL), () => _ufle12jhs77_f_MapData = null));
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_specialObject;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_specialObject => _ufle12jhs77_f_specialObject ?? (_ufle12jhs77_f_specialObject = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationSingle>(MetaDefault, new BGId(4613129631453140980UL, 5136207368358008742UL), () => _ufle12jhs77_f_specialObject = null));
	private static BansheeGz.BGDatabase.BGFieldVector2 _ufle12jhs77_f_cellPosition;
	public static BansheeGz.BGDatabase.BGFieldVector2 _f_cellPosition => _ufle12jhs77_f_cellPosition ?? (_ufle12jhs77_f_cellPosition = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldVector2>(MetaDefault, new BGId(5511294158484053841UL, 2904814911090748580UL), () => _ufle12jhs77_f_cellPosition = null));
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_unitBuildData.Factory _factory4_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory5_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory6_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory7_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory8_PFS = new D_StageData.Factory();
	private static readonly D_EnemyData.Factory _factory9_PFS = new D_EnemyData.Factory();
	private static readonly D_enemyGroup.Factory _factory10_PFS = new D_enemyGroup.Factory();
	private static readonly D_TilePosData.Factory _factory11_PFS = new D_TilePosData.Factory();
	private static readonly D_ObstacleTileMapData.Factory _factory12_PFS = new D_ObstacleTileMapData.Factory();
	private static readonly D_MapData.Factory _factory13_PFS = new D_MapData.Factory();
	private static readonly D_SpecialTile.Factory _factory14_PFS = new D_SpecialTile.Factory();
	private static readonly D_UnitsStat.Factory _factory15_PFS = new D_UnitsStat.Factory();
	private static readonly D_WildCardData.Factory _factory16_PFS = new D_WildCardData.Factory();
	private static readonly D_StatBoosterData.Factory _factory17_PFS = new D_StatBoosterData.Factory();
	private static readonly D_BoosterStats.Factory _factory18_PFS = new D_BoosterStats.Factory();
	private D_SpecialTile() : base(MetaDefault) {}
	private D_SpecialTile(BGId id) : base(MetaDefault, id) {}
	private D_SpecialTile(BGMetaEntity meta) : base(meta) {}
	private D_SpecialTile(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_SpecialTile FindEntity(Predicate<D_SpecialTile> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_SpecialTile> FindEntities(Predicate<D_SpecialTile> filter, List<D_SpecialTile> result=null, Comparison<D_SpecialTile> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_SpecialTile> action, Predicate<D_SpecialTile> filter=null, Comparison<D_SpecialTile> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_SpecialTile GetEntity(BGId entityId) => (D_SpecialTile) MetaDefault.GetEntity(entityId);
	public static D_SpecialTile GetEntity(int index) => (D_SpecialTile) MetaDefault[index];
	public static D_SpecialTile GetEntity(string entityName) => (D_SpecialTile) MetaDefault.GetEntity(entityName);
	public static D_SpecialTile NewEntity() => (D_SpecialTile) MetaDefault.NewEntity();
	public static D_SpecialTile NewEntity(BGId entityId) => (D_SpecialTile) MetaDefault.NewEntity(entityId);
	public static D_SpecialTile NewEntity(Action<D_SpecialTile> callback) => (D_SpecialTile) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_SpecialTile)entity)));
	public static D_SpecialTile NewEntity(D_MapData owner) => (D_SpecialTile) MetaDefault.NewEntity(owner);
	public static D_SpecialTile NewEntity(D_MapData owner, BGId entityId) => (D_SpecialTile) MetaDefault.NewEntity(owner, entityId);
	public static D_SpecialTile NewEntity(D_MapData owner, Action<D_SpecialTile> callback) => (D_SpecialTile) MetaDefault.NewEntity(owner, new BGMetaEntity.NewEntityContext(entity => callback((D_SpecialTile)entity)));
}

public partial class D_UnitsStat : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_UnitsStat(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_UnitsStat(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "UnitsStat";
		public const string name = "name";
		public const string UnitData = "UnitData";
		public const string StatName = "StatName";
		public const string StatValue = "StatValue";
	}
	private static BansheeGz.BGDatabase.BGMetaNested _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaNested MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaNested>(new BGId(4719611212706695371UL,3252974414587803283UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public D_UnitData f_UnitData
	{
		get => (D_UnitData) _f_UnitData[Index];
		set => _f_UnitData[Index] = value;
	}
	public StatName f_StatName
	{
		get => (StatName) _f_StatName.GetStoredValue(Index);
		set => _f_StatName.SetStoredValue(Index, (System.Int32) value);
	}
	public System.Int32 f_StatValue
	{
		get => _f_StatValue[Index];
		set => _f_StatValue[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5543067827390541863UL, 12867195255647720852UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_UnitData;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_UnitData => _ufle12jhs77_f_UnitData ?? (_ufle12jhs77_f_UnitData = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationSingle>(MetaDefault, new BGId(5279262837531328826UL, 18114834706161121940UL), () => _ufle12jhs77_f_UnitData = null));
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_f_StatName;
	public static BansheeGz.BGDatabase.BGFieldEnum _f_StatName => _ufle12jhs77_f_StatName ?? (_ufle12jhs77_f_StatName = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEnum>(MetaDefault, new BGId(4712175172402461235UL, 6579426968821257134UL), () => _ufle12jhs77_f_StatName = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_StatValue;
	public static BansheeGz.BGDatabase.BGFieldInt _f_StatValue => _ufle12jhs77_f_StatValue ?? (_ufle12jhs77_f_StatValue = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5208713176665404809UL, 8766299320695892408UL), () => _ufle12jhs77_f_StatValue = null));
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_unitBuildData.Factory _factory4_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory5_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory6_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory7_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory8_PFS = new D_StageData.Factory();
	private static readonly D_EnemyData.Factory _factory9_PFS = new D_EnemyData.Factory();
	private static readonly D_enemyGroup.Factory _factory10_PFS = new D_enemyGroup.Factory();
	private static readonly D_TilePosData.Factory _factory11_PFS = new D_TilePosData.Factory();
	private static readonly D_ObstacleTileMapData.Factory _factory12_PFS = new D_ObstacleTileMapData.Factory();
	private static readonly D_MapData.Factory _factory13_PFS = new D_MapData.Factory();
	private static readonly D_SpecialTile.Factory _factory14_PFS = new D_SpecialTile.Factory();
	private static readonly D_UnitsStat.Factory _factory15_PFS = new D_UnitsStat.Factory();
	private static readonly D_WildCardData.Factory _factory16_PFS = new D_WildCardData.Factory();
	private static readonly D_StatBoosterData.Factory _factory17_PFS = new D_StatBoosterData.Factory();
	private static readonly D_BoosterStats.Factory _factory18_PFS = new D_BoosterStats.Factory();
	private D_UnitsStat() : base(MetaDefault) {}
	private D_UnitsStat(BGId id) : base(MetaDefault, id) {}
	private D_UnitsStat(BGMetaEntity meta) : base(meta) {}
	private D_UnitsStat(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_UnitsStat FindEntity(Predicate<D_UnitsStat> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_UnitsStat> FindEntities(Predicate<D_UnitsStat> filter, List<D_UnitsStat> result=null, Comparison<D_UnitsStat> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_UnitsStat> action, Predicate<D_UnitsStat> filter=null, Comparison<D_UnitsStat> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_UnitsStat GetEntity(BGId entityId) => (D_UnitsStat) MetaDefault.GetEntity(entityId);
	public static D_UnitsStat GetEntity(int index) => (D_UnitsStat) MetaDefault[index];
	public static D_UnitsStat GetEntity(string entityName) => (D_UnitsStat) MetaDefault.GetEntity(entityName);
	public static D_UnitsStat NewEntity() => (D_UnitsStat) MetaDefault.NewEntity();
	public static D_UnitsStat NewEntity(BGId entityId) => (D_UnitsStat) MetaDefault.NewEntity(entityId);
	public static D_UnitsStat NewEntity(Action<D_UnitsStat> callback) => (D_UnitsStat) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_UnitsStat)entity)));
	public static D_UnitsStat NewEntity(D_UnitData owner) => (D_UnitsStat) MetaDefault.NewEntity(owner);
	public static D_UnitsStat NewEntity(D_UnitData owner, BGId entityId) => (D_UnitsStat) MetaDefault.NewEntity(owner, entityId);
	public static D_UnitsStat NewEntity(D_UnitData owner, Action<D_UnitsStat> callback) => (D_UnitsStat) MetaDefault.NewEntity(owner, new BGMetaEntity.NewEntityContext(entity => callback((D_UnitsStat)entity)));
}

public partial class D_WildCardData : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_WildCardData(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_WildCardData(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "WildCardData";
		public const string name = "name";
		public const string WildCardName = "WildCardName";
		public const string Description = "Description";
		public const string Grade = "Grade";
		public const string StatBoosterData = "StatBoosterData";
		public const string KeyGrade = "KeyGrade";
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4872301963196228080UL,7765206360331939715UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public System.String f_WildCardName
	{
		get => _f_WildCardName[Index];
		set => _f_WildCardName[Index] = value;
	}
	public System.String f_Description
	{
		get => _f_Description[Index];
		set => _f_Description[Index] = value;
	}
	public CardGrade f_Grade
	{
		get => (CardGrade) _f_Grade.GetStoredValue(Index);
		set => _f_Grade.SetStoredValue(Index, (System.Int32) value);
	}
	public List<D_StatBoosterData> f_StatBoosterData
	{
		get => BGCodeGenUtils.MultipleRelationGet<D_StatBoosterData>(_f_StatBoosterData, Index);
		set => BGCodeGenUtils.MultipleRelationSet<D_StatBoosterData>(_f_StatBoosterData, Index, value);
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5727612212447465347UL, 8930124116492062357UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_f_WildCardName;
	public static BansheeGz.BGDatabase.BGFieldString _f_WildCardName => _ufle12jhs77_f_WildCardName ?? (_ufle12jhs77_f_WildCardName = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5424515673354722464UL, 11574133637044617349UL), () => _ufle12jhs77_f_WildCardName = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_f_Description;
	public static BansheeGz.BGDatabase.BGFieldString _f_Description => _ufle12jhs77_f_Description ?? (_ufle12jhs77_f_Description = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4660221550547562453UL, 2006736635375945130UL), () => _ufle12jhs77_f_Description = null));
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_f_Grade;
	public static BansheeGz.BGDatabase.BGFieldEnum _f_Grade => _ufle12jhs77_f_Grade ?? (_ufle12jhs77_f_Grade = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEnum>(MetaDefault, new BGId(5642949185260688049UL, 9640977806420772543UL), () => _ufle12jhs77_f_Grade = null));
	private static BansheeGz.BGDatabase.BGFieldRelationMultiple _ufle12jhs77_f_StatBoosterData;
	public static BansheeGz.BGDatabase.BGFieldRelationMultiple _f_StatBoosterData => _ufle12jhs77_f_StatBoosterData ?? (_ufle12jhs77_f_StatBoosterData = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationMultiple>(MetaDefault, new BGId(4899623018660740441UL, 17311123235972695956UL), () => _ufle12jhs77_f_StatBoosterData = null));
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_KeyGrade;
	public static BansheeGz.BGDatabase.BGKey _KeyGrade => _edeht3sdad33_KeyGrade ?? (_edeht3sdad33_KeyGrade = BGCodeGenUtils.GetKey(MetaDefault, new BGId(5165735758975412737UL, 2219348547570594239UL), () => _edeht3sdad33_KeyGrade = null));
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_unitBuildData.Factory _factory4_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory5_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory6_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory7_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory8_PFS = new D_StageData.Factory();
	private static readonly D_EnemyData.Factory _factory9_PFS = new D_EnemyData.Factory();
	private static readonly D_enemyGroup.Factory _factory10_PFS = new D_enemyGroup.Factory();
	private static readonly D_TilePosData.Factory _factory11_PFS = new D_TilePosData.Factory();
	private static readonly D_ObstacleTileMapData.Factory _factory12_PFS = new D_ObstacleTileMapData.Factory();
	private static readonly D_MapData.Factory _factory13_PFS = new D_MapData.Factory();
	private static readonly D_SpecialTile.Factory _factory14_PFS = new D_SpecialTile.Factory();
	private static readonly D_UnitsStat.Factory _factory15_PFS = new D_UnitsStat.Factory();
	private static readonly D_WildCardData.Factory _factory16_PFS = new D_WildCardData.Factory();
	private static readonly D_StatBoosterData.Factory _factory17_PFS = new D_StatBoosterData.Factory();
	private static readonly D_BoosterStats.Factory _factory18_PFS = new D_BoosterStats.Factory();
	private D_WildCardData() : base(MetaDefault) {}
	private D_WildCardData(BGId id) : base(MetaDefault, id) {}
	private D_WildCardData(BGMetaEntity meta) : base(meta) {}
	private D_WildCardData(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_WildCardData FindEntity(Predicate<D_WildCardData> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_WildCardData> FindEntities(Predicate<D_WildCardData> filter, List<D_WildCardData> result=null, Comparison<D_WildCardData> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_WildCardData> action, Predicate<D_WildCardData> filter=null, Comparison<D_WildCardData> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_WildCardData GetEntity(BGId entityId) => (D_WildCardData) MetaDefault.GetEntity(entityId);
	public static D_WildCardData GetEntity(int index) => (D_WildCardData) MetaDefault[index];
	public static D_WildCardData GetEntity(string entityName) => (D_WildCardData) MetaDefault.GetEntity(entityName);
	public static D_WildCardData NewEntity() => (D_WildCardData) MetaDefault.NewEntity();
	public static D_WildCardData NewEntity(BGId entityId) => (D_WildCardData) MetaDefault.NewEntity(entityId);
	public static D_WildCardData NewEntity(Action<D_WildCardData> callback) => (D_WildCardData) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_WildCardData)entity)));
	public void f_StatBoosterData_Add(D_StatBoosterData related) => BGCodeGenUtils.MultipleRelationAdd(_f_StatBoosterData, Index, related);
	public void f_StatBoosterData_Remove(D_StatBoosterData related) => BGCodeGenUtils.MultipleRelationRemove(_f_StatBoosterData, Index, related);
	public static D_WildCardData GetEntityByKeyKeyGrade(CardGrade Grade) => (D_WildCardData) _KeyGrade.GetEntityByKey<CardGrade>(Grade);
	public static List<D_WildCardData> GetEntitiesByKeyKeyGrade(CardGrade Grade, List<D_WildCardData> result=null) => _KeyGrade.GetEntitiesByKey<D_WildCardData, CardGrade>(result, Grade);
}

public partial class D_StatBoosterData : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_StatBoosterData(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_StatBoosterData(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "StatBoosterData";
		public const string name = "name";
		public const string TargetUnitList = "TargetUnitList";
		public const string BoosterStats = "BoosterStats";
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4889937290013690963UL,7281500968251903925UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public List<D_UnitData> f_TargetUnitList
	{
		get => BGCodeGenUtils.MultipleRelationGet<D_UnitData>(_f_TargetUnitList, Index);
		set => BGCodeGenUtils.MultipleRelationSet<D_UnitData>(_f_TargetUnitList, Index, value);
	}
	public List<D_BoosterStats> f_BoosterStats => BGCodeGenUtils.GetNested<D_BoosterStats>(_f_BoosterStats, Index);
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5388043935934418609UL, 17644599433227190423UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldRelationMultiple _ufle12jhs77_f_TargetUnitList;
	public static BansheeGz.BGDatabase.BGFieldRelationMultiple _f_TargetUnitList => _ufle12jhs77_f_TargetUnitList ?? (_ufle12jhs77_f_TargetUnitList = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationMultiple>(MetaDefault, new BGId(4695368110108498880UL, 11826408473335266699UL), () => _ufle12jhs77_f_TargetUnitList = null));
	private static BansheeGz.BGDatabase.BGFieldNested _ufle12jhs77_f_BoosterStats;
	public static BansheeGz.BGDatabase.BGFieldNested _f_BoosterStats => _ufle12jhs77_f_BoosterStats ?? (_ufle12jhs77_f_BoosterStats = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldNested>(MetaDefault, new BGId(4755217962581673761UL, 1175019936005432214UL), () => _ufle12jhs77_f_BoosterStats = null));
	public List<Alias_rifegrt_WildCardData> RelatedWildCardDataListUsingStatBoosterDataRelation => BGCodeGenUtils.GetRelatedInbound<Alias_rifegrt_WildCardData>(Alias_rifegrt_WildCardData._f_StatBoosterData, Id);
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_unitBuildData.Factory _factory4_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory5_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory6_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory7_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory8_PFS = new D_StageData.Factory();
	private static readonly D_EnemyData.Factory _factory9_PFS = new D_EnemyData.Factory();
	private static readonly D_enemyGroup.Factory _factory10_PFS = new D_enemyGroup.Factory();
	private static readonly D_TilePosData.Factory _factory11_PFS = new D_TilePosData.Factory();
	private static readonly D_ObstacleTileMapData.Factory _factory12_PFS = new D_ObstacleTileMapData.Factory();
	private static readonly D_MapData.Factory _factory13_PFS = new D_MapData.Factory();
	private static readonly D_SpecialTile.Factory _factory14_PFS = new D_SpecialTile.Factory();
	private static readonly D_UnitsStat.Factory _factory15_PFS = new D_UnitsStat.Factory();
	private static readonly D_WildCardData.Factory _factory16_PFS = new D_WildCardData.Factory();
	private static readonly D_StatBoosterData.Factory _factory17_PFS = new D_StatBoosterData.Factory();
	private static readonly D_BoosterStats.Factory _factory18_PFS = new D_BoosterStats.Factory();
	private D_StatBoosterData() : base(MetaDefault) {}
	private D_StatBoosterData(BGId id) : base(MetaDefault, id) {}
	private D_StatBoosterData(BGMetaEntity meta) : base(meta) {}
	private D_StatBoosterData(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_StatBoosterData FindEntity(Predicate<D_StatBoosterData> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_StatBoosterData> FindEntities(Predicate<D_StatBoosterData> filter, List<D_StatBoosterData> result=null, Comparison<D_StatBoosterData> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_StatBoosterData> action, Predicate<D_StatBoosterData> filter=null, Comparison<D_StatBoosterData> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_StatBoosterData GetEntity(BGId entityId) => (D_StatBoosterData) MetaDefault.GetEntity(entityId);
	public static D_StatBoosterData GetEntity(int index) => (D_StatBoosterData) MetaDefault[index];
	public static D_StatBoosterData GetEntity(string entityName) => (D_StatBoosterData) MetaDefault.GetEntity(entityName);
	public static D_StatBoosterData NewEntity() => (D_StatBoosterData) MetaDefault.NewEntity();
	public static D_StatBoosterData NewEntity(BGId entityId) => (D_StatBoosterData) MetaDefault.NewEntity(entityId);
	public static D_StatBoosterData NewEntity(Action<D_StatBoosterData> callback) => (D_StatBoosterData) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_StatBoosterData)entity)));
	public void f_TargetUnitList_Add(D_UnitData related) => BGCodeGenUtils.MultipleRelationAdd(_f_TargetUnitList, Index, related);
	public void f_TargetUnitList_Remove(D_UnitData related) => BGCodeGenUtils.MultipleRelationRemove(_f_TargetUnitList, Index, related);
}

public partial class D_BoosterStats : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new D_BoosterStats(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new D_BoosterStats(meta, id);
	}

	public static class __Names
	{
		public const string Meta = "BoosterStats";
		public const string name = "name";
		public const string StatBoosterData = "StatBoosterData";
		public const string StatName = "StatName";
		public const string IncreaseValue = "IncreaseValue";
	}
	private static BansheeGz.BGDatabase.BGMetaNested _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaNested MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaNested>(new BGId(5432681897641104062UL,15916091598267722631UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String f_name
	{
		get => _f_name[Index];
		set => _f_name[Index] = value;
	}
	public D_StatBoosterData f_StatBoosterData
	{
		get => (D_StatBoosterData) _f_StatBoosterData[Index];
		set => _f_StatBoosterData[Index] = value;
	}
	public StatName f_StatName
	{
		get => (StatName) _f_StatName.GetStoredValue(Index);
		set => _f_StatName.SetStoredValue(Index, (System.Int32) value);
	}
	public System.Int32 f_IncreaseValue
	{
		get => _f_IncreaseValue[Index];
		set => _f_IncreaseValue[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name => _ufle12jhs77_f_name ?? (_ufle12jhs77_f_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5150950406869965225UL, 5398652749333490320UL), () => _ufle12jhs77_f_name = null));
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_f_StatBoosterData;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _f_StatBoosterData => _ufle12jhs77_f_StatBoosterData ?? (_ufle12jhs77_f_StatBoosterData = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationSingle>(MetaDefault, new BGId(4635761050483096846UL, 18190520240893373849UL), () => _ufle12jhs77_f_StatBoosterData = null));
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_f_StatName;
	public static BansheeGz.BGDatabase.BGFieldEnum _f_StatName => _ufle12jhs77_f_StatName ?? (_ufle12jhs77_f_StatName = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEnum>(MetaDefault, new BGId(4626950939520265540UL, 303070625192185274UL), () => _ufle12jhs77_f_StatName = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_IncreaseValue;
	public static BansheeGz.BGDatabase.BGFieldInt _f_IncreaseValue => _ufle12jhs77_f_IncreaseValue ?? (_ufle12jhs77_f_IncreaseValue = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5547527699987853135UL, 11026029233184753536UL), () => _ufle12jhs77_f_IncreaseValue = null));
	private static readonly D_TileShpeData.Factory _factory0_PFS = new D_TileShpeData.Factory();
	private static readonly D_LocalUserData.Factory _factory1_PFS = new D_LocalUserData.Factory();
	private static readonly D_BoostDeck.Factory _factory2_PFS = new D_BoostDeck.Factory();
	private static readonly D_UnitData.Factory _factory3_PFS = new D_UnitData.Factory();
	private static readonly D_unitBuildData.Factory _factory4_PFS = new D_unitBuildData.Factory();
	private static readonly D_UnitShopChanceData.Factory _factory5_PFS = new D_UnitShopChanceData.Factory();
	private static readonly D_ObjectPoolData.Factory _factory6_PFS = new D_ObjectPoolData.Factory();
	private static readonly D_WaveData.Factory _factory7_PFS = new D_WaveData.Factory();
	private static readonly D_StageData.Factory _factory8_PFS = new D_StageData.Factory();
	private static readonly D_EnemyData.Factory _factory9_PFS = new D_EnemyData.Factory();
	private static readonly D_enemyGroup.Factory _factory10_PFS = new D_enemyGroup.Factory();
	private static readonly D_TilePosData.Factory _factory11_PFS = new D_TilePosData.Factory();
	private static readonly D_ObstacleTileMapData.Factory _factory12_PFS = new D_ObstacleTileMapData.Factory();
	private static readonly D_MapData.Factory _factory13_PFS = new D_MapData.Factory();
	private static readonly D_SpecialTile.Factory _factory14_PFS = new D_SpecialTile.Factory();
	private static readonly D_UnitsStat.Factory _factory15_PFS = new D_UnitsStat.Factory();
	private static readonly D_WildCardData.Factory _factory16_PFS = new D_WildCardData.Factory();
	private static readonly D_StatBoosterData.Factory _factory17_PFS = new D_StatBoosterData.Factory();
	private static readonly D_BoosterStats.Factory _factory18_PFS = new D_BoosterStats.Factory();
	private D_BoosterStats() : base(MetaDefault) {}
	private D_BoosterStats(BGId id) : base(MetaDefault, id) {}
	private D_BoosterStats(BGMetaEntity meta) : base(meta) {}
	private D_BoosterStats(BGMetaEntity meta, BGId id) : base(meta, id) {}
	public static D_BoosterStats FindEntity(Predicate<D_BoosterStats> filter) => BGCodeGenUtils.FindEntity(MetaDefault, filter);
	public static List<D_BoosterStats> FindEntities(Predicate<D_BoosterStats> filter, List<D_BoosterStats> result=null, Comparison<D_BoosterStats> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<D_BoosterStats> action, Predicate<D_BoosterStats> filter=null, Comparison<D_BoosterStats> sort=null) => BGCodeGenUtils.ForEachEntity(MetaDefault, action, filter, sort);
	public static D_BoosterStats GetEntity(BGId entityId) => (D_BoosterStats) MetaDefault.GetEntity(entityId);
	public static D_BoosterStats GetEntity(int index) => (D_BoosterStats) MetaDefault[index];
	public static D_BoosterStats GetEntity(string entityName) => (D_BoosterStats) MetaDefault.GetEntity(entityName);
	public static D_BoosterStats NewEntity() => (D_BoosterStats) MetaDefault.NewEntity();
	public static D_BoosterStats NewEntity(BGId entityId) => (D_BoosterStats) MetaDefault.NewEntity(entityId);
	public static D_BoosterStats NewEntity(Action<D_BoosterStats> callback) => (D_BoosterStats) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((D_BoosterStats)entity)));
	public static D_BoosterStats NewEntity(D_StatBoosterData owner) => (D_BoosterStats) MetaDefault.NewEntity(owner);
	public static D_BoosterStats NewEntity(D_StatBoosterData owner, BGId entityId) => (D_BoosterStats) MetaDefault.NewEntity(owner, entityId);
	public static D_BoosterStats NewEntity(D_StatBoosterData owner, Action<D_BoosterStats> callback) => (D_BoosterStats) MetaDefault.NewEntity(owner, new BGMetaEntity.NewEntityContext(entity => callback((D_BoosterStats)entity)));
}
#pragma warning restore 414
